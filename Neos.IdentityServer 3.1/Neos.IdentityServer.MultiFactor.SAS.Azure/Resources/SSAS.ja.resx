<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GLOBALCFGLabel" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="GLOBALListChoiceDefaultLabel" xml:space="preserve">
    <value>既定の Azure オプションを使用する</value>
  </data>
  <data name="GLOBALListChoiceLabel" xml:space="preserve">
    <value>Azure 認証オプションを使用する</value>
  </data>
  <data name="GLOBALListOptionLabel" xml:space="preserve">
    <value>Azure 認証オプション</value>
  </data>
  <data name="GLOBALManagement" xml:space="preserve">
    <value>Azure オプションを登録する</value>
  </data>
  <data name="GLOBALOTPLabel" xml:space="preserve">
    <value>単一使用アクセスコード</value>
  </data>
  <data name="GLOBALWarnOverNetwork" xml:space="preserve">
    <value>(データはインターネット経由で転送されます)</value>
  </data>
  <data name="GLOBALWarnThirdParty" xml:space="preserve">
    <value>(認証はマイクロソフトによって実行されます)</value>
  </data>
  <data name="GLOBALWIZLabel" xml:space="preserve">
    <value>モバイルを登録する</value>
  </data>
  <data name="NOTIFChoiceLabel" xml:space="preserve">
    <value>モバイルに通知を送信する (Azure)</value>
  </data>
  <data name="NOTIFConfigLabel" xml:space="preserve">
    <value>認証アプリケーションでの通知</value>
  </data>
  <data name="NOTIFMessage" xml:space="preserve">
    <value>モバイル デバイスに通知が送信されました。続行する答え。</value>
  </data>
  <data name="OTPChoiceLabel" xml:space="preserve">
    <value>認証アプリケーションを使用する (Azure)</value>
  </data>
  <data name="OTPConfigLabel" xml:space="preserve">
    <value>認証アプリケーションを使用する</value>
  </data>
  <data name="OTPMessage" xml:space="preserve">
    <value>モバイルアプリケーションの確認コードを入力します。</value>
  </data>
  <data name="SMSChoiceLabel" xml:space="preserve">
    <value>コードをモバイルに送信する (Azure)</value>
  </data>
  <data name="SMSConfigLabel" xml:space="preserve">
    <value>携帯電話のテキストメッセージ</value>
  </data>
  <data name="SMSConfigLabel2" xml:space="preserve">
    <value>携帯電話の{0}に表示されるテキスト メッセージ</value>
  </data>
  <data name="SMSMessage" xml:space="preserve">
    <value>確認コードを含む SMS を送信しました。{0}</value>
  </data>
  <data name="VOICE1ChoiceLabel" xml:space="preserve">
    <value>携帯電話に電話する (Azure)</value>
  </data>
  <data name="VOICE1ConfigLabel" xml:space="preserve">
    <value>モバイルでの音声通話</value>
  </data>
  <data name="VOICE1ConfigLabel2" xml:space="preserve">
    <value>モバイル {0}での音声通話</value>
  </data>
  <data name="VOICE1Message" xml:space="preserve">
    <value>私たちはあなたの電話を{0}呼び出します。続行する答え。</value>
  </data>
  <data name="VOICE2ChoiceLabel" xml:space="preserve">
    <value>セカンダリ電話 (Azure) に電話する</value>
  </data>
  <data name="VOICE2ConfigLabel" xml:space="preserve">
    <value>セカンダリ携帯電話の音声通話</value>
  </data>
  <data name="VOICE2ConfigLabel2" xml:space="preserve">
    <value>セカンダリ携帯電話の音声通話{0}</value>
  </data>
  <data name="VOICE2Message" xml:space="preserve">
    <value>私たちはあなたのセカンダリ電話を{0}呼び出します。続行する答え。</value>
  </data>
  <data name="VOICE3ChoiceLabel" xml:space="preserve">
    <value>オフィスの電話に電話する (Azure)</value>
  </data>
  <data name="VOICE3ConfigLabel" xml:space="preserve">
    <value>オフィスの電話での音声通話</value>
  </data>
  <data name="VOICE3ConfigLabel2" xml:space="preserve">
    <value>オフィスの電話{0}での音声通話</value>
  </data>
  <data name="VOICE3Message" xml:space="preserve">
    <value>私たちはあなたのオフィスの電話を{0}呼び出します。続行する答え。</value>
  </data>
  <data name="PROVIDERAZURESDESCRIPTION" xml:space="preserve">
    <value>マイクロソフト Azure 多要素プロバイダー</value>
  </data>
</root>
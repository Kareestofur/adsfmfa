<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neos.IdentityServer.MultiFactor.Cmdlets</name>
    </assembly>
    <members>
        <member name="T:MFA.PSRegistrationList">
            <summary>
            PSRegistrationList class
            <para type="synopsis">List of user entry in MFA System.</para>
            <para type="description">List a user entry registered with MFA.</para>
            </summary>
            <example>
              <para>$users = Get-MFAUsers</para>
            </example>
        </member>
        <member name="M:MFA.PSRegistrationList.op_Explicit(Neos.IdentityServer.MultiFactor.MFAUserList)~MFA.PSRegistrationList">
            <summary>
            explicit conversion to PSRegistrationList
            </summary>
        </member>
        <member name="M:MFA.PSRegistrationList.op_Explicit(MFA.PSRegistrationList)~Neos.IdentityServer.MultiFactor.MFAUserList">
            <summary>
            explicit conversion from PSRegistrationList
            </summary>
        </member>
        <member name="T:MFA.PSRegistration">
            <summary>
            PSRegistration class
            <para type="synopsis">User entry in MFA System.</para>
            <para type="description">Represent a user entry registered with MFA.</para>
            <para type="description">You can access, update each user property.</para>
            </summary>
            <example>
              <para>$u = Get-MFAUsers -Identity user@domain.com</para>
              <para>$u.MailAddress = usermail@domain.com</para>
              <para>$u.PhoneNumber = 0102030405</para>
              <para>$u.PreferredMethod = Phone</para>
              <para>Set-MFAUsers $u</para> 
            </example>
        </member>
        <member name="P:MFA.PSRegistration.ID">
            <summary>
            Properties
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.UPN">
            <summary>
            <para type="description">User identity (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.MailAddress">
            <summary>
            <para type="description">User mail address.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.PhoneNumber">
            <summary>
            <para type="description">User mobile phone number.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.PIN">
            <summary>
            <para type="description">User's PIN code. 0 if none.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.Enabled">
            <summary>
            <para type="description">User status.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRegistration.PreferredMethod">
            <summary>
            <para type="description">Preferred MFA method : Choose, Code, email, Phone, Face (for future use).</para>
            </summary>
        </member>
        <member name="M:MFA.PSRegistration.op_Explicit(Neos.IdentityServer.MultiFactor.MFAUser)~MFA.PSRegistration">
            <summary>
            implicit conversion to PSRegistration
            </summary>
        </member>
        <member name="M:MFA.PSRegistration.op_Explicit(MFA.PSRegistration)~Neos.IdentityServer.MultiFactor.MFAUser">
            <summary>
            implicit conversion from PSRegistration
            </summary>
        </member>
        <member name="T:MFA.PSConfig">
            <summary>
            PSGeneralConfiguration class
            <para type="synopsis">Main configuration properties in MFA System.</para>
            <para type="description">Represent Main configuration properties registered with MFA.</para>
            <para type="description">You can access, update each config property.</para>
            </summary>
            <example>
              <para>$cfg = Get-MFAConfig</para>
              <para>$cfg.UseOfUserLanguages = $true</para>
              <para>Set-MFAConfig $cfg</para> 
            </example>
        </member>
        <member name="P:MFA.PSConfig.AdminContact">
            <summary>
            <para type="description">Administrators email, used in administrative emails sent to users.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.Issuer">
            <summary>
            <para type="description">Issuer description (eg "my company").</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.DefaultCountryCode">
            <summary>
            <para type="description">Default contry code, used for SMS calls .</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.DefaultProviderMethod">
            <summary>
            <para type="description">Default provider when User method equals "Choose".</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.LimitEnrollmentToDefaultProvider">
            <summary>
            <para type="description">Limit Enrollement Wizards to the default Default provider method.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.UserFeatures">
            <summary>
            <para type="description">Policy attributes for users management and registration.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.CustomUpdatePassword">
            <summary>
            <para type="description">Use or not our implementation for changing user password,if not we are using /ADFS/Portal/updatepasswor.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.KeepMySelectedOptionOn">
            <summary>
            <para type="description">Let user to change the default MFA provider for later use.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.ChangeNotificationsOn">
            <summary>
            <para type="description">Send email notifications when a user update his configuration.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.AllowPasswordsReset">
            <summary>
            <para type="description">Allow Administrators to reset users paswords.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.UseOfUserLanguages">
            <summary>
            <para type="description">Use of User's browser laguages instead or standard localization features.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.AllowPauseForDays">
            <summary>
            <para type="description">Allows or not to suspend MFA for the same User on the same Machine for the same STS for the Day (0 = Disabled).</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.AdvertisingDays">
            <summary>
            <para type="description">Policy attributes for warnings to users.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.UiKind">
            <summary>
            <para type="description">Kind of ADFS's User Interface version.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.UseUIPaginated">
            <summary>
            <para type="description">Use ADFS 2019 paginated UI Styles.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.PrimaryAuhenticationOptions">
            <summary>
            <para type="description">Options when using MFA as primary auth.</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.AdapterPresentationImplementation">
            <summary>
            <para type="description">Class Library for custom UI implementation (FullyQualifiedImplementation).</para>
            </summary>
        </member>
        <member name="P:MFA.PSConfig.ForcedLanguage">
            <summary>
            <para type="description">Force adfsmfa to no Use localization but a specified language.</para>
            </summary>
        </member>
        <member name="M:MFA.PSConfig.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatConfig)~MFA.PSConfig">
            <summary>
            implicit conversion to PSConfig
            </summary>
        </member>
        <member name="M:MFA.PSConfig.op_Explicit(MFA.PSConfig)~Neos.IdentityServer.MultiFactor.Administration.FlatConfig">
            <summary>
            implicit conversion from PSConfig
            </summary>
        </member>
        <member name="T:MFA.PSAdvertisingDays">
            <summary>
            PSAdvertisingDays class
            <para type="synopsis">Main configuration properties in MFA System.</para>
            <para type="description">Range of days during which users are invited to register.</para>
            </summary>
            <example>
              <para>$cfg = Get-MFAConfig</para>
              <para>$cfg.AdvertisingDays.FirstDay = 12</para>
              <para>$cfg.AdvertisingDays.FirstDay = 25</para>
              <para>Set-MFAConfig $cfg</para> 
            </example>
        </member>
        <member name="P:MFA.PSAdvertisingDays.FirstDay">
            <summary>
            <para type="description">First Day for advertising.</para>
            </summary>
        </member>
        <member name="P:MFA.PSAdvertisingDays.LastDay">
            <summary>
            <para type="description">Last Day for advertising.</para>
            </summary>
        </member>
        <member name="P:MFA.PSAdvertisingDays.OnFire">
            <summary>
            <para type="description">OnFire.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAdvertisingDays.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatAdvertising)~MFA.PSAdvertisingDays">
            <summary>
            <para type="description">explicit operator.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAdvertisingDays.op_Explicit(MFA.PSAdvertisingDays)~Neos.IdentityServer.MultiFactor.Administration.FlatAdvertising">
            <summary>
            <para type="description">explicit operator.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAdvertisingDays.op_Implicit(System.String)~MFA.PSAdvertisingDays">
            <summary>
            <para type="description">explicit operator.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAdvertisingDays.op_Implicit(System.Management.Automation.ScriptBlock)~MFA.PSAdvertisingDays">
            <summary>
            <para type="description">explicit operator.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAdvertisingDays.ToString">
            <summary>
            <para type="description">ToString() override.</para>
            </summary>
        </member>
        <member name="T:MFA.PSBaseStore">
            <summary>
              <para type="synopsis">ADDS / SQL common class.</para>
              <para type="description">ADDS / SQL base class.</para>
            </summary>
            <example>
              <para>Get-MFAStore -Store ADDS</para>
            </example>
        </member>
        <member name="P:MFA.PSBaseStore.Active">
            <summary>
            <para type="description">If true, users metadata are stored in ADDS attributes or in SQL Database. see : Get-MFAStore -Store ADDS or Get-MFAStore -Store SQL.</para>
            </summary>
        </member>
        <member name="T:MFA.PSADDSStore">
            <summary>
            PSADDSStore class
            <para type="synopsis">ADDS configuration properties in MFA System.</para>
            <para type="description">ADDS configuration properties registered with MFA.You can access, update attributes properties.</para>
            </summary>
            <example>
              <para>Get-MFAStore -Store ADDS</para>
            </example>
        </member>
        <member name="P:MFA.PSADDSStore.KeyAttribute">
            <summary>
            <para type="description">ADDS attribute name user to store user secret key (default msDS-cloudExtensionAttribute10).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.MailAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user custom mail address (default msDS-cloudExtensionAttribute11).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.PhoneAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user phone number (default msDS-cloudExtensionAttribute12).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.MethodAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user preferred method (Code, Phone, Mail) (default msDS-cloudExtensionAttribute13).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.OverrideMethodAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user preferred method (Code, Phone, Mail) (default msDS-cloudExtensionAttribute14).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.EnabledAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user status with MFA (default msDS-cloudExtensionAttribute18).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.PinAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user pin code (default msDS-cloudExtensionAttribute15).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.PublicKeyCredentialAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store multiple user Public Keys Credential (recommended msDS-KeyCredentialLink or othetMailbox).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.ClientCertificateAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store Client Certificate (default msDS-cloudExtensionAttribute16).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.RSACertificateAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store RSA Certificate (default msDS-cloudExtensionAttribute17).</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.MaxRows">
            <summary>
            <para type="description">Get or Set the max rows limit used to access MFA Active Directory.</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.UseSSL">
            <summary>
            <para type="description">Get or Set value indicating if ldap or ldaps must be used to access MFA Active Directory.</para>
            </summary>
        </member>
        <member name="P:MFA.PSADDSStore.WeakPublicKeyEncoding">
            <summary>
            <para type = "description" > Disable DN encoding in publickey serialization, username will be used instead. Usefull when you move your users in different ADDS Organization Units.</para>
            </summary>
        </member>
        <member name="M:MFA.PSADDSStore.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatADDSStore)~MFA.PSADDSStore">
            <summary>
            implicit conversion 
            </summary>
        </member>
        <member name="M:MFA.PSADDSStore.op_Explicit(MFA.PSADDSStore)~Neos.IdentityServer.MultiFactor.Administration.FlatADDSStore">
            <summary>
            implicit conversion 
            </summary>
        </member>
        <member name="M:MFA.PSADDSStore.SetADDSAttributesTemplate(MFA.PSADDSTemplateKind)">
            <summary>
            SetADDSAttributesTemplate method implementation
            </summary>
        </member>
        <member name="T:MFA.PSSQLStore">
            <summary>
            PSSQLStore class
            <para type="synopsis">SQL configuration properties in MFA System.</para>
            <para type="description">SQL configuration properties registered with MFA. You can access, update connectionString property.</para>
            </summary>
            <example>
              <para>Get-MFAStore -Store SQL</para>
            </example>
        </member>
        <member name="P:MFA.PSSQLStore.ConnectionString">
            <summary>
            <para type="description">Get or Set the connection string used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.MaxRows">
            <summary>
            <para type="description">Get or Set the max rows limit used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.IsAlwaysEncrypted">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 and up Always Encrypted feature. default = false.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.CertificateValidity">
            <summary>
            <para type="description">Get or Set the validity of the generated certificate (in years, 5 per default).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.ThumbPrint">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 and up Always Encrypted feature Thumprint.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.CertReuse">
            <summary>
            <para type="description">Get or Set the indicating if we are reusing an existing certificate.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSQLStore.KeyName">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 crypting key name.</para>
            </summary>
        </member>
        <member name="M:MFA.PSSQLStore.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatSQLStore)~MFA.PSSQLStore">
            <summary>
            implicit conversion to PSConfig
            </summary>
        </member>
        <member name="M:MFA.PSSQLStore.op_Explicit(MFA.PSSQLStore)~Neos.IdentityServer.MultiFactor.Administration.FlatSQLStore">
            <summary>
            implicit conversion from PSConfig
            </summary>
        </member>
        <member name="T:MFA.PSCustomStore">
            <summary>
            PSSQLStore class
            <para type="synopsis">SQL configuration properties in MFA System.</para>
            <para type="description">SQL configuration properties registered with MFA. You can access, update connectionString property.</para>
            </summary>
            <example>
              <para>Get-MFAStore -Store SQL</para>
            </example>
        </member>
        <member name="P:MFA.PSCustomStore.ConnectionString">
            <summary>
            <para type="description">Get or Set the connection string used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.PSCustomStore.MaxRows">
            <summary>
            <para type="description">Get or Set the max rows limit used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.PSCustomStore.DataRepositoryFullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default storage.</para>
            </summary>
        </member>
        <member name="P:MFA.PSCustomStore.KeysRepositoryFullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default storage for keys.</para>
            </summary>
        </member>
        <member name="P:MFA.PSCustomStore.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default storage.</para>
            </summary>
        </member>
        <member name="M:MFA.PSCustomStore.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatCustomStore)~MFA.PSCustomStore">
            <summary>
            implicit conversion to PSConfig
            </summary>
        </member>
        <member name="M:MFA.PSCustomStore.op_Explicit(MFA.PSCustomStore)~Neos.IdentityServer.MultiFactor.Administration.FlatCustomStore">
            <summary>
            implicit conversion from PSConfig
            </summary>
        </member>
        <member name="T:MFA.PSBaseSecurity">
            <summary>
            PSBaseSecurity class implementation
            <para type="description">Base Security Class.</para>
            </summary>
        </member>
        <member name="T:MFA.PSSecurity">
            <summary>
            PSSecurity class
            <para type="synopsis">MFA Security Management.</para>
            <para type="description">MFA Security Management.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.DeliveryWindow">
            <summary>
            <para type="description">Max delay for the user to enter TOTP code (seconds 300 by default).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.MaxRetries">
            <summary>
            <para type="description">Number of allowed retry allowed (default 3)..</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.ReplayLevel">
            <summary>
            <para type="description">TOTP Replay Level feature.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.LibVersion">
            <summary>
            <para type="description">Used to Change the version of the encryption Library. V1 is the initial implementation but is less secure, you must migrate to V2</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.XORSecret">
            <summary>
            <para type="description">String used for XOR operations in V2 LibVersion</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.AdministrationPinEnabled">
            <summary>
            <para type="description">If true, updates of configuration requires Administration PIN.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.AdministrationPin">
            <summary>
            <para type="description">Administration PIN value (Default = 1230).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.PinLength">
            <summary>
            <para type="description">Required PIN length wehen using aditionnal control with personal PIN.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.DefaultPin">
            <summary>
            <para type="description">Default value for user's PIN.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.UsePasswordPolicy">
            <summary>
            <para type="description">Use MFA Password Policy.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.UsePSOPasswordPolicy">
            <summary>
            <para type="description">Use Domain Password Policy or Domain Fine-Grained Password Policy.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.LockUserOnPasswordExpiration">
            <summary>
            <para type="description">Lock the user, if user password is expired.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.MaxPasswordAgeInDays">
            <summary>
            <para type="description">Max user password age.</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.WarnPasswordExpirationBeforeInDays">
            <summary>
            <para type="description">Emit warning before user password expiration (in days).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.DomainAddress">
            <summary>
            <para type="description">Domain name to access (read/write) Active Directory (if ADFS account has rights you leave it blank).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.Account">
            <summary>
            <para type="description">Account name to access (read/write) Active Directory (if ADFS account has rights you leave it blank).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.Password">
            <summary>
            <para type="description">Password used for account to access (read/write) Active Directory (if ADFS account has rights you leave it blank).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.SQLAccount">
            <summary>
            <para type="description">Account name used to access SQL Server Database (if ADFS account has rights you leave it blank).</para>
            </summary>
        </member>
        <member name="P:MFA.PSSecurity.SQLPassword">
            <summary>
            <para type="description">Password used to access SQL Server Database (if ADFS account has rights you leave it blank).</para>
            </summary>
        </member>
        <member name="M:MFA.PSSecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatSecurity)~MFA.PSSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="M:MFA.PSSecurity.op_Explicit(MFA.PSSecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSRNGSecurity">
            <summary>
            PSRNGSecurity class
            <para type="synopsis">MFA Security Management for RNG Keys.</para>
            <para type="description">MFA Security Management for RNG Keys.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRNGSecurity.KeyGenerator">
            <summary>
            <para type="description">Used when RNG is selected, for choosing the size of the generated random number (128 to 512 bytes).</para> 
            </summary>
        </member>
        <member name="M:MFA.PSRNGSecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatRNGSecurity)~MFA.PSRNGSecurity">
            <summary>
            explicit operator from PSRNGSecurity
            </summary>
        </member>
        <member name="M:MFA.PSRNGSecurity.op_Explicit(MFA.PSRNGSecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatRNGSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSCustomSecurity">
            <summary>
            PSCustomSecurity class
            <para type="synopsis">MFA Security Management for Custom Keys.</para>
            <para type="description">MFA Security Management for Custom Keys.</para>
            </summary>
        </member>
        <member name="P:MFA.PSCustomSecurity.CustomFullyQualifiedImplementation">
            <summary>
            <para type="description">Fully Qualified Type for custom security implementation.</para> 
            </summary>
        </member>
        <member name="P:MFA.PSCustomSecurity.CustomParameters">
            <summary>
            <para type="description">Custom parameters for custom security implementation.</para> 
            </summary>
        </member>
        <member name="M:MFA.PSCustomSecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatCustomSecurity)~MFA.PSCustomSecurity">
            <summary>
            explicit operator from PSRNGSecurity
            </summary>
        </member>
        <member name="M:MFA.PSCustomSecurity.op_Explicit(MFA.PSCustomSecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatCustomSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSAESSecurity">
            <summary>
            PSAESSecurity class
            <para type="synopsis">MFA Security Management for EAS Keys.</para>
            <para type="description">MFA Security Management for EAS Keys.</para>
            </summary>
        </member>
        <member name="P:MFA.PSAESSecurity.AESKeyGenerator">
            <summary>
            <para type="description">Used when AES is selected, choosing between ECDH 256 Key ou custom 256 key (1024 bits).</para> 
            </summary>
        </member>
        <member name="M:MFA.PSAESSecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatAESSecurity)~MFA.PSAESSecurity">
            <summary>
            explicit operator from PSAESSecurity
            </summary>
        </member>
        <member name="M:MFA.PSAESSecurity.op_Explicit(MFA.PSAESSecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatAESSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSRSASecurity">
            <summary>
            PSRSASecurity class
            <para type="synopsis">MFA Security Management.</para>
            <para type="description">MFA Security Management.</para>
            </summary>
        </member>
        <member name="P:MFA.PSRSASecurity.CertificateValidity">
            <summary>
            <para type="description">Certificate validity duration in Years (5 by default)</para> 
            </summary>
        </member>
        <member name="P:MFA.PSRSASecurity.CertificatePerUser">
            <summary>
            <para type="description">Use a distinct certificate for each user when using KeyFormat==RSA. each certificate is deployed on ADDS or SQL Database</para> 
            </summary>
        </member>
        <member name="P:MFA.PSRSASecurity.CertificateThumbprint">
            <summary>
            <para type="description">Certificate Thumbprint when using KeyFormat==RSA. the certificate is deployed on all ADFS servers in Crypting Certificates store</para> 
            </summary>
        </member>
        <member name="M:MFA.PSRSASecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatRSASecurity)~MFA.PSRSASecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="M:MFA.PSRSASecurity.op_Explicit(MFA.PSRSASecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatRSASecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSBiometricSecurity">
            <summary>
            PSBiometricSecurity class
            <para type="synopsis">MFA Security Management.</para>
            <para type="description">MFA Security Management.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.AuthenticatorAttachment">
            <summary>
            <para type="description">Authenticator Attachment property (empty, Platform, Crossplatform).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.AttestationConveyancePreference">
            <summary>
            <para type="description">Attestation Conveyance Preference property (None, Direct, Indirect).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.UserVerificationRequirement">
            <summary>
            <para type="description">User Verification Requirement property (Preferred, Required, Discouraged).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.Extensions">
            <summary>
            <para type="description">Extensions property (boolean) supports extensions ?.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.UserVerificationMethod">
            <summary>
            <para type="description">User Verification Method property (boolean).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.RequireResidentKey">
            <summary>
            <para type="description">Require Resident Key property (boolean).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricSecurity.ConstrainedMetadataRepository">
            <summary>
            <para type="description">False = Use Default MDS3 MetadataRepository, True = Use Contrained MDS3 MetadataRepository, When your ADFS servers doesn't have an Internet access.</para>
            <para type="description">True = Use Contrained MDS3 MetadataRepository, When your ADFS servers doesn't have an Internet access.</para>
            <para type="description">You must download the latest MDS3 metadata at "https://mds.fidoalliance.org/".</para>
            </summary>
        </member>
        <member name="M:MFA.PSBiometricSecurity.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatBiometricSecurity)~MFA.PSBiometricSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="M:MFA.PSBiometricSecurity.op_Explicit(MFA.PSBiometricSecurity)~Neos.IdentityServer.MultiFactor.Administration.FlatBiometricSecurity">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSBaseProvider">
            <summary>
            <para type="synopsis">configuration properties in MFA System.</para>
            <para type="description">base class for different configuration properties in MFA System.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.EnrollWizardDisabled">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled/Disabled at Registration or Invitation property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.LockUserOnDefaultProvider">
            <summary>
            <para type="description">Lock user on his preferred method only property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.FullQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBaseProvider.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="T:MFA.PSTOTPProvider">
            <summary>
            PSTOTPProvider class
            <para type="synopsis">Parameters for TOTP Provider.</para>
            <para type="description">provided for TOTP MFA.</para>
            <para type="description">Typically this component is used with authenticator applications, Notification and more.</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.TOTPShadows">
            <summary>
            <para type="description">TOTP Provider Shadow codes. 2 by default</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.Algorithm">
            <summary>
            <para type="description">TOTP Provider Hash algorithm. SHA1 by default</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.Digits">
            <summary>
            <para type="description">TOTP Provider Code len between 4 and 8. 6 by default</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.Duration">
            <summary>
            <para type="description">TOTP Provider Code renew duration in seconds. 30s by default</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.CustomAuthenticatorLogo">
            <summary>
            CustomAuthenticatorLogo
            <para type = "description" >File name of the image (60x60 px) of the Custom Authenticator Application</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.CustomAuthenticatorMSStoreLink">
            <summary>
            CustomAuthenticatorMSStoreLink
            <para type = "description" >Public store link to download Custom Authenticator Application from Microsoft Store</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.CustomAuthenticatorGooglePlayLink">
            <summary>
            CustomAuthenticatorGooglePlayLink
            <para type = "description" >Public store link to download Custom Authenticator Application from Google Play</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.CustomAuthenticatorAppStoreLink">
            <summary>
            CustomAuthenticatorAppStoreLink
            <para type = "description" >Public store link to download Custom Authenticator Application from App Store</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.WizardOptions">
            <summary>
            <para type="description">Set TOP Wizard Application list enabled/ disabled.</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.KeysFormat">
            <summary>
            <para type="description">Type of generated Keys for users (RNG, RSA, CUSTOM RSA).</para>
            <para type="description">Changing the key format, invalidate all the users secret keys previously used.</para>
            <para type="description">RSA and RSA Custom are using Certificates. Custom RSA must Use Specific database to the keys and certs, one for each user, see New-MFASecretKeysDatabase cmdlet.</para>
            </summary>
        </member>
        <member name="P:MFA.PSTOTPProvider.KeySize">
            <summary>
            <para type="description">Used to trim the key at a fixed size, when you use RSA the key is very long, and QRCode is often too big for TOTP Application (1024 is a good size, even if RSA key is 2048 bytes long).</para>
            </summary>
        </member>
        <member name="M:MFA.PSTOTPProvider.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatTOTPProvider)~MFA.PSTOTPProvider">
            <summary>
            explicit operator from PSTOTPProvider
            </summary>
        </member>
        <member name="M:MFA.PSTOTPProvider.op_Explicit(MFA.PSTOTPProvider)~Neos.IdentityServer.MultiFactor.Administration.FlatTOTPProvider">
            <summary>
            explicit operator from FlatOTPProvider
            </summary>
        </member>
        <member name="T:MFA.PSMailProvider">
            <summary>
            PSMailProvider class
            <para type="synopsis">SMTP configuration properties in MFA System.</para>
            <para type="description">SMTP/POP configuration properties registered with MFA.</para>
            <para type="description">You can access, update attributes properties.</para>
            </summary>
            <example>
              <para>Get-MFAProvider -ProviderType Email</para>
            </example>
        </member>
        <member name="P:MFA.PSMailProvider.From">
            <summary>
            <para type="description">Mail from property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.UserName">
            <summary>
            <para type="description">Account Name used to access Mail platform.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.Password">
            <summary>
            <para type="description">Password used with Username to access Mail platform.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.Host">
            <summary>
            <para type="description">Mail platform Host eg : smtp.office365.com.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.Port">
            <summary>
            <para type="description">Mail platform IP Port eg : 587.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.UseSSL">
            <summary>
            <para type="description">Mail platform SSL option.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.Company">
            <summary>
            <para type="description">Your company description, tis is used in default mails contents.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.Anonymous">
            <summary>
            <para type="description">indicate if connetion is Anonymous.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.DeliveryNotifications">
            <summary>
            <para type="description">if your want Delivery Failures, Delayed delivery or nothing (default).</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.AllowedDomains">
            <summary>
            <para type="description">List of domains that are only allowed.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.BlockedDomains">
            <summary>
            <para type="description">List of domains that are not allowed.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.MailOTP">
            <summary>
            <para type="description">Custom mail templates.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.MailInscription">
            <summary>
            <para type="description">Custom mail templates.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.MailSecureKey">
            <summary>
            <para type="description">Custom mail templates.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailProvider.MailNotifications">
            <summary>
            <para type="description">Custom mail templates.</para>
            </summary>
        </member>
        <member name="M:MFA.PSMailProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MFA.PSMailProvider.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatMailProvider)~MFA.PSMailProvider">
            <summary>
            explicit conversion to PSConfigMail
            </summary>
        </member>
        <member name="M:MFA.PSMailProvider.op_Explicit(MFA.PSMailProvider)~Neos.IdentityServer.MultiFactor.Administration.FlatMailProvider">
            <summary>
            explicit conversion from PSConfigMail
            </summary>
        </member>
        <member name="T:MFA.PSMailFileName">
            <summary>
            PSConfigMailFileName class
            <para type="synopsis">Mail custom templates used in MFA System.</para>
            <para type="description">Mail custom templates registered with MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailFileName.LCID">
            <summary>
            <para type="description">LCID (1033, 1034, 1036, 3082).</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailFileName.FileName">
            <summary>
            <para type="description">File path to Html file user as custom template.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailFileName.Enabled">
            <summary>
            <para type="description">Enabled status for custom template.</para>
            </summary>
        </member>
        <member name="M:MFA.PSMailFileName.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:MFA.PSMailFileName.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatMailFileName)~MFA.PSMailFileName">
            <summary>
            explicit operator 
            </summary>
        </member>
        <member name="M:MFA.PSMailFileName.op_Explicit(MFA.PSMailFileName)~Neos.IdentityServer.MultiFactor.Administration.FlatMailFileName">
            <summary>
            explicit operator 
            </summary>
        </member>
        <member name="T:MFA.PSMailFileNames">
            <summary>
            PSMailFileName class
            <para type="synopsis">Mail custom templates collection used in MFA System.</para>
            <para type="description">Mail custom templates collection registered with MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailFileNames.Templates">
            <summary>
            <para type="description">Templates property.</para>
            </summary>
        </member>
        <member name="M:MFA.PSMailFileNames.AddTemplate(System.Int32,System.String,System.Boolean)">
            <summary>
            AddTemplate method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailFileNames.SetTemplate(System.Int32,System.String,System.Boolean)">
            <summary>
            SetTemplate method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailFileNames.RemoveTemplate(System.Int32)">
            <summary>
            RemoveTemplate method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailFileNames.ToString">
            <summary>
            ToString method override
            </summary>
        </member>
        <member name="T:MFA.PSMailBlockedDomains">
            <summary>
            PSMailBlockedDomains class
            <para type="synopsis">Mail blocked domains collection used in MFA System.</para>
            <para type="description">Mail blocked domains collection registered with MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailBlockedDomains.Domains">
            <summary>
            <para type="description">BlockedDomains property.</para>
            </summary>
        </member>
        <member name="M:MFA.PSMailBlockedDomains.AddDomain(System.String)">
            <summary>
            AddDomain method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailBlockedDomains.RemoveDomain(System.String)">
            <summary>
            RemoveDomain method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailBlockedDomains.ToString">
            <summary>
            ToString method override
            </summary>
        </member>
        <member name="T:MFA.PSMailAllowedDomains">
            <summary>
            PSMailAllowedDomains class
            <para type="synopsis">Mail allowed domains only collection used in MFA System.</para>
            <para type="description">Mail allowed domains only collection registered with MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.PSMailAllowedDomains.Domains">
            <summary>
            <para type="description">AllowedDomains property.</para>
            </summary>
        </member>
        <member name="M:MFA.PSMailAllowedDomains.AddDomain(System.String)">
            <summary>
            AddDomain method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailAllowedDomains.RemoveDomain(System.String)">
            <summary>
            RemoveDomain method implmentation
            </summary>
        </member>
        <member name="M:MFA.PSMailAllowedDomains.ToString">
            <summary>
            ToString method override
            </summary>
        </member>
        <member name="T:MFA.PSExternalProvider">
            <summary>
            PSExternalProvider class
            <para type="synopsis">Specify External OTP Provider, you must implement IExternalOTPProvider interface.</para>
            <para type="description">Samples are provided for Azure and custom.</para>
            <para type="description">Typically this component is used when sending SMS, you can use your own SMS gateway.</para>
            </summary>
        </member>
        <member name="P:MFA.PSExternalProvider.Company">
            <summary>
            <para type="description">your company name, can be used to format External message sent to user.</para>
            </summary>
        </member>
        <member name="P:MFA.PSExternalProvider.Sha1Salt">
            <summary>
            <para type="description">Optional Salt value, if your gateway support this feature.</para>
            </summary>
        </member>
        <member name="P:MFA.PSExternalProvider.IsTwoWay">
            <summary>
            <para type="description">Pass parameter to your implemented provider, indicating if the mode is Request/Response</para>
            </summary>
        </member>
        <member name="P:MFA.PSExternalProvider.Timeout">
            <summary>
            <para type="description">TimeOut Before cancelling operation</para>
            </summary>
        </member>
        <member name="M:MFA.PSExternalProvider.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatExternalProvider)~MFA.PSExternalProvider">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="M:MFA.PSExternalProvider.op_Explicit(MFA.PSExternalProvider)~Neos.IdentityServer.MultiFactor.Administration.FlatExternalProvider">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSAzureProvider">
            <summary>
            PSAzureProvider class
            <para type="synopsis">Parameters for Azure MFA Provider.</para>
            <para type="description">provided for Azure MFA.</para>
            <para type="description">Typically this component is used when sending SMS, Notification and more.</para>
            <para type="description">Note : everthing is managed by Microsoft MFA Remotely.</para>
            </summary>
        </member>
        <member name="P:MFA.PSAzureProvider.TenantId">
            <summary>
            <para type="description">your Azure/o365 tenantId / tenant name.</para>
            </summary>
        </member>
        <member name="P:MFA.PSAzureProvider.Thumbprint">
            <summary>
            <para type="description">Thumbprint of the Azure cetificate (Done when configuring Azure MFA.</para>
            </summary>
        </member>
        <member name="M:MFA.PSAzureProvider.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatAzureProvider)~MFA.PSAzureProvider">
            <summary>
            explicit operator from PSConfigAzureProvider
            </summary>
        </member>
        <member name="M:MFA.PSAzureProvider.op_Explicit(MFA.PSAzureProvider)~Neos.IdentityServer.MultiFactor.Administration.FlatAzureProvider">
            <summary>
            explicit operator from MMCKeysConfig
            </summary>
        </member>
        <member name="T:MFA.PSBiometricProvider">
            <summary>
            PSBiometricProvider class
            <para type="synopsis">Parameters for Biometric MFA Provider.</para>
            <para type="description">provided Biometric MFA.</para>
            <para type="description">Typically this component is used when using fingerprint or face recognition.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.DirectLogin">
            <summary>
            <para type="description">When Biometrics is default method, authentication directly called a first time</para> 3
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.Timeout">
            <summary>
            <para type="description">Timeout property (in milliseconds).</para> 
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.TimestampDriftTolerance">
            <summary>
            <para type="description">Timestamp Drift Tolerance property (in milliseconds).</para> 
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.ChallengeSize">
            <summary>
            <para type="description">Challenge Size property (16, 32, 48, 64 bytes) (128, 256, 384, 512 bits).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.ServerDomain">
            <summary>
            <para type="description">Server Domain property.</para> 
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.ServerName">
            <summary>
            <para type="description">Server Name property.</para> 
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.ServerIcon">
            <summary>
            <para type="description">Server Icon property (url).</para> 
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.Origin">
            <summary>
            <para type="description">Server Uri property (url).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.PinRequirements">
            <summary>
            <para type="description">Pin requirements for unverified biometrics devices.</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.UseNickNames">
            <summary>
            <para type="description">Name biometric device at registration (NickName).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.ForbiddenBrowsers">
            <summary>
            <para type = "description" > Browsers can't use biometric authentication (eg: IE).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.InitiatedBrowsers">
            <summary>
            <para type = "description" > Operating Systems that can use biometric authentication with user initiated action (eg: Safari for TouchID and FaceID).</para>
            </summary>
        </member>
        <member name="P:MFA.PSBiometricProvider.NoCounterBrowsers">
            <summary>
            <para type = "description" > Browsers that require that the counter is always 0 (eg: Safari for TouchID and FaceID).</para>
            </summary>
        </member>
        <member name="M:MFA.PSBiometricProvider.op_Explicit(Neos.IdentityServer.MultiFactor.Administration.FlatBiometricProvider)~MFA.PSBiometricProvider">
            <summary>
            explicit operator from PSConfigBiometricProvider
            </summary>
        </member>
        <member name="M:MFA.PSBiometricProvider.op_Explicit(MFA.PSBiometricProvider)~Neos.IdentityServer.MultiFactor.Administration.FlatBiometricProvider">
            <summary>
            explicit operator for FlatBiometricProvider
            </summary>
        </member>
        <member name="T:MFA.PSPreferredMethod">
            <summary>
            PSPreferredMethod
            <para type="synopsis">MFA Preferred method (Choose, Code, Email, External, Azure, Biometrics),  if sibling Provider is active.</para>
            <para type="description">MFA Preferred method (Choose, Code, Email, External, Azure, Biometrics).</para>
            </summary>    
        </member>
        <member name="F:MFA.PSPreferredMethod.Choose">
            <summary>
            <para type="description">Choose, let users to choose between differnet available active modes</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.Code">
            <summary>
            <para type="description">Code, default mode for users is TOTP computed number, available with authenticator Applications on thier mobile device. (MFA : 2 Facors for authentication, What i know (my login/passord) and wahat i hold (my device))</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.Email">
            <summary>
            <para type="description">Email, default mode for users is email, an email is sent avec acces code.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.External">
            <summary>
            <para type="description">External, default mode for users is SMS or any solution developped, this an be async. A Sanmple if provided for Azure MFA (old version from PhoneFactors). You can also watch to the "Quiz Provider Sample"</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.Azure">
            <summary>
            <para type="description">Azure, default mode for users is Azure MFA, Like default Azure MFA Provider in ADFS 2016 and up.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.Biometrics">
            <summary>
            <para type="description">Biometrics, default mode for users is biometric authentication, based on WebAuthN specification.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.Pin">
            <summary>
            <para type="description">Pin, Not Used .</para>
            </summary>
        </member>
        <member name="F:MFA.PSPreferredMethod.None">
            <summary>
            <para type="description">None, do not change anything.</para>
            </summary>
        </member>
        <member name="T:MFA.PSStoreMode">
            <summary>
            PSStoreMode
            <para type="synopsis">MFA Store Kind (ADDS, SQL).</para>
            <para type="description">ADDS : ADDSL Store.</para>
            <para type="description">SQL : SQL Store.</para>
            </summary>    
        </member>
        <member name="F:MFA.PSStoreMode.ADDS">
            <summary>
            <para type="description">Active Directory Store</para>
            </summary>
        </member>
        <member name="F:MFA.PSStoreMode.SQL">
            <summary>
            <para type="description">SQL Server Store.</para>
            </summary>
        </member>
        <member name="F:MFA.PSStoreMode.Custom">
            <summary>
            <para type="description">Specific implementation for storage.</para>
            </summary>
        </member>
        <member name="T:MFA.PSSecurityMode">
            <summary>
            PSSecurityMode
            <para type="synopsis">MFA Security Kind (ROOT, RNG, RSA, AES, CUSTOM, BIOMETRIC).</para>
            <para type="description">MFA Security Kind (ROOT, RNG, RSA, AES, CUSTOM, BIOMETRIC).</para>
            </summary>    
        </member>
        <member name="F:MFA.PSSecurityMode.RNG">
            <summary>
            <para type="description">Security parmaters for RNG Keys.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecurityMode.RSA">
            <summary>
            <para type="description">Security parmaters for RSA Keys.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecurityMode.AES">
            <summary>
            <para type="description">Security parmaters for AES Keys.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecurityMode.CUSTOM">
            <summary>
            <para type="description">Security parmaters for Custom implementations.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecurityMode.BIOMETRIC">
            <summary>
            <para type="description">Security parmaters for Biometrics.</para>
            </summary>
        </member>
        <member name="T:MFA.PSReplayLevel">
            <summary>
            PSReplayLevel
            <para type="synopsis">MFA TOTP Replay feature (Disabled, Intermediate, Full).</para>
            <para type="description">Disabled : Replay feature is disabled (default).</para>
            <para type="description">Intermediate : TOTP Replay is active, except fomr the same machine.</para>
            <para type="description">Full : TOTP Replay is fully active (more secure).</para>
            </summary>    
        </member>
        <member name="F:MFA.PSReplayLevel.Disabled">
            <summary>
            <para type="description">Replay feature is disabled (default)</para>
            </summary>
        </member>
        <member name="F:MFA.PSReplayLevel.Intermediate">
            <summary>
            <para type="description">TOTP Replay is active, except from the same machine.</para>
            </summary>
        </member>
        <member name="F:MFA.PSReplayLevel.Full">
            <summary>
            <para type="description">TOTP Replay is fully active (more secure).</para>
            </summary>
        </member>
        <member name="T:MFA.PSPasswordSync">
            <summary>
            PSPasswordSync
            <para type="synopsis">Kind of credential to update (SuperUser, Mail User, or System passphrase (for encryption).</para>
            <para type="description">SuperUser : Change the SuperUser password.</para>
            <para type="description">MailUser : Change the mail account password.</para>
            <para type="description">SystemPassPhrase : Change Pass Phrase used for encryption.</para>
            </summary>    
        </member>
        <member name="F:MFA.PSPasswordSync.All">
            <summary>
            <para type="description">Encrypt all credentials.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPasswordSync.SuperUser">
            <summary>
            <para type="description">Change the ADDS SuperUser password.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPasswordSync.MailUser">
            <summary>
            <para type="description">Change the mail account password.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPasswordSync.SystemPassPhrase">
            <summary>
            <para type="description">Change Pass Phrase used for encryption.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPasswordSync.SQLUser">
            <summary>
            <para type="description">Change the SQL Server SuperUser password.</para>
            </summary>
        </member>
        <member name="T:MFA.PSADDSTemplateKind">
            <summary>
            PSADDSTemplateKind
            <para type="synopsis">Kind of the attributes list template (SchemaAll, Schema2016, SchemaMFA).</para>
            <para type="description">SchemaAll : Schema template compatible with all ADDS 2012 and up Schema versions.</para>
            <para type="description">Schema2016 : Schema template compatible with all ADDS 2016 and up Schema versions (87).</para>
            <para type="description">SchemaMFA : Custom Schema template for MFA, yoy must modify Shecma with supplied LDIF scripts.</para>
            </summary>    
        </member>
        <member name="F:MFA.PSADDSTemplateKind.SchemaAll">
            <summary>
            <para type="description">Schema template compatible with all ADDS 2012 and up Schema versions</para>
            </summary>
        </member>
        <member name="F:MFA.PSADDSTemplateKind.Schema2016">
            <summary>
            <para type="description">Schema template compatible with all ADDS 2016 and up Schema versions (87)</para>
            </summary>
        </member>
        <member name="F:MFA.PSADDSTemplateKind.SchemaMFA">
            <summary>
            <para type="description">Custom Schema template for MFA, yoy must modify Shecma with supplied LDIF scripts</para>
            </summary>
        </member>
        <member name="T:MFA.PSSecretKeyFormat">
            <summary>
            PSSecretKeyFormat
            <para type="synopsis">MFA TOTP key generation mode (RNG, RSA and CUSTOM.</para>
            <para type="description">RND (Random,Number Generator) Strong generator for numbers, From 128 bytes to 512 bytes. can be stored in ADDS or SQL default MFA Database.</para>
            <para type="description">RSA A Shared Certificate 2048 bytes, including encrypted logon name. can be stored in ADDS or SQL default MFA Database.</para> 
            <para type="description">CUSTOM A Certificate 2048 bytes for each user, including encrypted logon name. can only be stored in SQL Keys MFA Database.</para> 
            </summary>    
        </member>
        <member name="F:MFA.PSSecretKeyFormat.RNG">
            <summary>
            <para type="description">RNG (Ramdom Number Generator).</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecretKeyFormat.RSA">
            <summary>
            <para type="description">RSA encryption.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecretKeyFormat.AES">
            <summary>
            <para type="description">AES encryption .</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecretKeyFormat.CUSTOM">
            <summary>
            <para type="description">CUSTOM encryption.</para>
            </summary>
        </member>
        <member name="T:MFA.PSSecretKeyVersion">
            <summary>
            PSSecretkeyVersion
            <para type="synopsis">MFA TOTP key Encryption Lib version (V1, V2).</para>
            <para type="description">V1 Old Encryption Library less secure. for compatibility</para>
            <para type="description">New Encryption Library more secure.</para> 
            </summary>    
        </member>
        <member name="F:MFA.PSSecretKeyVersion.V1">
            <summary>
            <para type="description">Old Encryption Library less secure, you must select V2 as soon as possible.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSecretKeyVersion.V2">
            <summary>
            <para type="description">New Encryption Library more secure.</para>
            </summary>
        </member>
        <member name="T:MFA.PSProviderType">
            <summary>
            PSProviderType
            <para type="synopsis">MFA Providers Kinds.</para>
            <para type="description">MFA Providers Types (Code, Email, External, Azure, Biometrics).</para>
            </summary>    
        </member>
        <member name="F:MFA.PSProviderType.Code">
            <summary>
            <para type="description">Kind for TOTP MFA Provider</para>
            </summary>
        </member>
        <member name="F:MFA.PSProviderType.Email">
            <summary>
            <para type="description">Kind for Email MFA Provider</para>
            </summary>
        </member>
        <member name="F:MFA.PSProviderType.External">
            <summary>
            <para type="description">Kind for External / SMS MFA Provider</para>
            </summary>
        </member>
        <member name="F:MFA.PSProviderType.Azure">
            <summary>
            <para type="description">Kind for Azure MFA Provider</para>
            </summary>
        </member>
        <member name="F:MFA.PSProviderType.Biometrics">
            <summary>
            <para type="description">Kind for Biometric MFA Provider</para>
            </summary>
        </member>
        <member name="T:MFA.PSTemplateMode">
            <summary>
            PSTemplateMode
            <para type="synopsis">Policy templates for users features.</para>
            <para type="description">Policy templates for users featuresregistered with MFA.</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Free">
            <summary>
            <para type="description">(UserFeaturesOptions.BypassDisabled | UserFeaturesOptions.BypassUnRegistered | UserFeaturesOptions.AllowManageOptions | UserFeaturesOptions.AllowChangePassword)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Open">
            <summary>
            <para type="description">(UserFeaturesOptions.BypassDisabled | UserFeaturesOptions.AllowUnRegistered | UserFeaturesOptions.AllowManageOptions | UserFeaturesOptions.AllowChangePassword)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Default">
            <summary>
            <para type="description">(UserFeaturesOptions.AllowDisabled | UserFeaturesOptions.AllowUnRegistered | UserFeaturesOptions.AllowManageOptions | UserFeaturesOptions.AllowChangePassword)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Mixed">
            <summary>
            <para type="description">(UserFeaturesOptions.ForceEnabled | UserFeaturesOptions.ForceRegistered | UserFeaturesOptions.AllowManageOptions | UserFeaturesOptions.AllowChangePassword)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Managed">
            <summary>
            <para type="description">(UserFeaturesOptions.BypassDisabled | UserFeaturesOptions.AllowUnRegistered | UserFeaturesOptions.AllowProvideInformations | UserFeaturesOptions.AllowChangePassword)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Strict">
            <summary>
            <para type="description">(UserFeaturesOptions.AdministrativeMode | UserFeaturesOptions.AllowProvideInformations)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Administrative">
            <summary>
            <para type="description">(UserFeaturesOptions.AdministrativeMode)</para>
            </summary>
        </member>
        <member name="F:MFA.PSTemplateMode.Custom">
            <summary>
            <para type="description">(UserFeaturesOptions.AllowDisabled | UserFeaturesOptions.AllowUnRegistered)</para>
            </summary>
        </member>
        <member name="T:MFA.PSForceWizardMode">
            <summary>
            PSForceWizardMode
            <para type="synopsis">Fallback mode when user have choosed "I'have no code".</para>
            <para type="description">If Enabled or Strict, force user to run Wizard after choose "I'have no code". Only available with PowerShell</para>
            </summary>
        </member>
        <member name="F:MFA.PSForceWizardMode.Disabled">
            <summary>
            <para type="description">Fallback is disabled, this is the default</para>
            </summary>
        </member>
        <member name="F:MFA.PSForceWizardMode.Enabled">
            <summary>
            <para type="description">Fallback is enabled, the user can cancel Wizard registration</para>
            </summary>
        </member>
        <member name="F:MFA.PSForceWizardMode.Strict">
            <summary>
            <para type="description">Fallback is strict, the user cannot cancel Wizard registration</para>
            </summary>
        </member>
        <member name="T:MFA.PSUserFeaturesOptions">
            <summary>
            PSUserFeaturesOptions
            <para type="synopsis">Configuration options for registering or accessing MFA. Must be combined with binary OR.</para>
            <para type="description">Configuration options for registering or accessing MFA. Must be combined with binary OR, in MMC you can use Templates</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.NoSet">
            <summary>
            <para type="description">NoSet, must not be used.</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.BypassUnRegistered">
            <summary>
            <para type="description">BypassUnRegistered, Allow user access if not registered in MFA.</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.BypassDisabled">
            <summary>
            <para type="description">BypassDisabled, Allow user access if not enabled in MFA.</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowUnRegistered">
            <summary>
            <para type="description">AllowUnRegistered, Allow user access if not registered in MFA. But, the user is invited to register</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowDisabled">
            <summary>
            <para type="description">AllowDisabled, Allow user access if not enabled in MFA. But, the user is invited to enable his account</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowChangePassword">
            <summary>
            <para type="description">AllowChangePassword, Change password link is provided for user in "Manage My options"</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowManageOptions">
            <summary>
            <para type="description">AllowManageOptions, Manage my options link is provided for user."</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowProvideInformations">
            <summary>
            <para type="description">AllowProvideInformations, When not registered or enabled, user can post informations to administrators, and ask them to activate thier account."</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AllowEnrollment">
            <summary>
            <para type="description">AllowEnrollment, Allow Wizards link for enabled Providers."</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserFeaturesOptions.AdministrativeMode">
            <summary>
            <para type="description">AdministrativeMode, Lock access to users if not registered o disabled."</para>
            </summary>
        </member>
        <member name="T:MFA.PSWebAuthNPinRequirements">
            <summary>
            PSWebAuthNPinRequirements
            <para type="synopsis">Configuration options for Pin requirement when Biometric login, the user is not verified. Must be combined with binary OR.</para>
            <para type="description">Configuration options for Pin requirement when Biometric login, the user is not verified. Must be combined with binary OR.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.Null">
            <summary>
            <para type="description">Null, No requirement for pin.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.None">
            <summary>
            <para type="description">None, Pin requirement for None Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.AndroidKey">
            <summary>
            <para type="description">AndroidKey, Pin requirement for AndroidKey Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.AndroidSafetyNet">
            <summary>
            <para type="description">AndroidSafetyNet, Pin requirement for AndroidSafetyNet Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.Fido2U2f">
            <summary>
            <para type="description">Fido2U2f, Pin requirement for Fido2U2f Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.Packed">
            <summary>
            <para type="description">Packed, Pin requirement for Packed Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="F:MFA.PSWebAuthNPinRequirements.TPM">
            <summary>
            <para type="description">TPM, Pin requirement for TPM Attestation type when user is not verified.</para>
            </summary>
        </member>
        <member name="T:MFA.PSUIKind">
            <summary>
            PSUIKind
            <para type="synopsis">Kind of ADFS's User Interface version</para>
            <para type="description">Kind of ADFS's User Interface version (ADFS 2019 or Older with Custome Themes)</para>
            </summary>
        </member>
        <member name="F:MFA.PSUIKind.Default">
            <summary>
            <para type="description">Default UI theme for ADFS 2012r2, 2016 and 2019</para>
            </summary>
        </member>
        <member name="F:MFA.PSUIKind.Default2019">
            <summary>
            <para type="description">Default UI theme for ADFS 2019 only (Centered)</para>
            </summary>
        </member>
        <member name="F:MFA.PSUIKind.Custom">
            <summary>
            <para type="description">Custom implementation for UI ADFS's theme</para>
            </summary>
        </member>
        <member name="T:MFA.PSPrimaryAuthOptions">
            <summary>
            PSPrimaryAuthOptions
            <para type="synopsis">Options when using MFA as Primary Authentication</para>
            <para type="description">Options when using MFA as Primary Authentication</para>
            </summary>
        </member>
        <member name="F:MFA.PSPrimaryAuthOptions.None">
            <summary>
            <para type="description">None, Nothing allowed (no external providers, no registration process.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPrimaryAuthOptions.Externals">
            <summary>
            <para type="description">Externals, Externals providers like Email or Phone are allowed as Primary authentication methods.</para>
            </summary>
        </member>
        <member name="F:MFA.PSPrimaryAuthOptions.Register">
            <summary>
            <para type="description">Register, Registration process is aalowed as Primary authentication methos.</para>
            </summary>
        </member>
        <member name="T:MFA.PSKeyGeneratorMode">
            <summary>
            PSKeyGeneratorMode
            <para type="synopsis">For RNG Key generation, Key Size from 128 bits to 512 bits.</para>
            <para type="description">Configuration options for registering or accessing MFA. Must be combined with binary OR, in MMC you can use Templates</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyGeneratorMode.Guid">
            <summary>
            <para type="description">Guid, 128 bits length</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyGeneratorMode.ClientSecret128">
            <summary>
            <para type="description">ClientSecret128, 128 bits length with RNG</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyGeneratorMode.ClientSecret256">
            <summary>
            <para type="description">ClientSecret256, 256 bits length with RNG</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyGeneratorMode.ClientSecret384">
            <summary>
            <para type="description">ClientSecret384, 384 bits length with RNG</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyGeneratorMode.ClientSecret512">
            <summary>
            <para type="description">ClientSecret512, 512 bits length with RNG</para>
            </summary>
        </member>
        <member name="T:MFA.PSAESKeyGeneratorMode">
            <summary>
            PSAESKeyGeneratorMode
            <para type="synopsis">For AES Key encryption, Key Size 1024 bits.</para>
            <para type="description">Configuration options for AES256 Keys encryption.</para>
            </summary>
        </member>
        <member name="F:MFA.PSAESKeyGeneratorMode.ECDH_P256">
            <summary>
            <para type="description">Elliptic Curve Diffie Hellman With AES256 encryption mode, 1024 bits length </para>
            </summary>
        </member>
        <member name="F:MFA.PSAESKeyGeneratorMode.AES256">
            <summary>
            <para type="description">AES256 Encryption mode, 1024 bits length</para>
            </summary>
        </member>
        <member name="T:MFA.PSKeySizeMode">
            <summary>
            PSKeySizeMode
            <para type="synopsis">For RSA and Custom, encryption Key is 2018 bytes, but this generate a huge QRCode, to restrict the display Size.</para>
            <para type="description">Restricts QRCode size, by default 1024 bytes</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySizeDefault">
            <summary>
            <para type="description">KeySizeDefault, 2048 bytes length for encryption and 1024 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize512">
            <summary>
            <para type="description">KeySize512, 2048 bytes length for encryption and 512 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize1024">
            <summary>
            <para type="description">KeySize1024, 2048 bytes length for encryption and 1024 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize2048">
            <summary>
            <para type="description">KeySize2048, 2048 bytes length for encryption and 2048 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize128">
            <summary>
            <para type="description">KeySize128, 2048 bytes length for encryption and 128 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize256">
            <summary>
            <para type="description">KeySize256, 2048 bytes length for encryption and 256 bytes for display</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeySizeMode.KeySize384">
            <summary>
            <para type="description">KeySize384, 2048 bytes length for encryption and 384 bytes for display</para>
            </summary>
        </member>
        <member name="T:MFA.PSHashMode">
            <summary>
            PSHashMode
            <para type="synopsis">Hash algo for TOTP Key generation, default is SHA1. (see rfc6238, rfc4226)</para>
            <para type="description">Microsoft, Google and others only supports SHA1, but rfc specification says that it can be 256, 384 and 512. Only Authy supports higher values.</para>
            </summary>   
        </member>
        <member name="F:MFA.PSHashMode.SHA1">
            <summary>
            <para type="description">SHA1, default hashing for TOTP key generation</para>
            </summary>
        </member>
        <member name="F:MFA.PSHashMode.SHA256">
            <summary>
            <para type="description">SHA256, hashing for TOTP key generation. supported by Authy authenticator App.</para>
            </summary>
        </member>
        <member name="F:MFA.PSHashMode.SHA384">
            <summary>
            <para type="description">SHA384, hashing for TOTP key generation. supported by Authy authenticator App.</para>
            </summary>
        </member>
        <member name="F:MFA.PSHashMode.SHA512">
            <summary>
            <para type="description">SHA512, hashing for TOTP key generation. supported by Authy authenticator App.</para>
            </summary>
        </member>
        <member name="T:MFA.PSOTPWizardOptions">
            <summary>
            PSOTPWizardOptions
            <para type="synopsis">TOTP Wizard, allowed links</para>
            <para type="description">TOTP Wizard, allowed links</para>
            </summary>   
        </member>
        <member name="F:MFA.PSOTPWizardOptions.All">
            <summary>
            <para type="description">All, all links are displayed.</para>
            </summary>
        </member>
        <member name="F:MFA.PSOTPWizardOptions.MicrosoftAuthenticator">
            <summary>
            <para type="description">MicrosoftAuthenticator, enable link for Microsoft Authenticator.</para>
            </summary>
        </member>
        <member name="F:MFA.PSOTPWizardOptions.GoogleAuthenticator">
            <summary>
            <para type="description">GoogleAuthenticator, enable link for Google Authenticator.</para>
            </summary>
        </member>
        <member name="F:MFA.PSOTPWizardOptions.AuthyAuthenticator">
            <summary>
            <para type="description">AuthyAuthenticator, enable link for Authy Authenticator.</para>
            </summary>
        </member>
        <member name="F:MFA.PSOTPWizardOptions.GoogleSearch">
            <summary>
            <para type="description">GoogleSearch, enable link for searching on internet for Authenticator Apps.</para>
            </summary>
        </member>
        <member name="F:MFA.PSOTPWizardOptions.CustomAuthenticator">
            <summary>
            <para type="description">CustomAuthenticator, enable link for Custom Authenticator.</para>
            </summary>
        </member>
        <member name="T:MFA.PSSampleKind">
            <summary>
            PSSampleKind
            <para type="synopsis">Samples Kind</para>
            <para type="description">Samples Kind</para>
            </summary>   
        </member>
        <member name="F:MFA.PSSampleKind.QuizProviderSample">
            <summary>
            <para type="description">Quiz demo for external provider.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSampleKind.CaesarEnryptionSample">
            <summary>
            <para type="description">Caesar encryption demo for custom keys.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSampleKind.InMemoryStorageSample">
            <summary>
            <para type="description">InMemory custom storage demo for custom storage.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSampleKind.TOTPProviderSample">
            <summary>
            <para type="description">TOPT Provider sample for custom TOTP provider.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSampleKind.SMSProviderSample">
            <summary>
            <para type="description">SMS/External Provider sample for external provider.</para>
            </summary>
        </member>
        <member name="F:MFA.PSSampleKind.CustomPresentation">
            <summary>
            <para type="description">Cumstom UI Presentation.</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataOrderField">
            <summary>
            PSDataOrderField
            <para type="synopsis">PowerShell Standard Order type</para>
            <para type="description">PowerShell Standard Order type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataOrderField.None">
            <summary>
            <para type="description">None, No Order.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderField.UserName">
            <summary>
            <para type="description">UserName, Order by UserName.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderField.Email">
            <summary>
            <para type="description">Email, Order by MailAddress.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderField.Phone">
            <summary>
            <para type="description">Phnoe, Order by PhoneNumber.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderField.ID">
            <summary>
            <para type="description">ID, Order by Internal ID.</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataOrderCryptedField">
            <summary>
            PSDataOrderCryptedField
            <para type="synopsis">PowerShell Crypted Order type</para>
            <para type="description">PowerShell Crypted Order type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataOrderCryptedField.None">
            <summary>
            <para type="description">None, No Order.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderCryptedField.UserName">
            <summary>
            <para type="description">UserName, Order by UserName.</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataOrderCryptedField.ID">
            <summary>
            <para type="description">ID, Order by Internal ID.</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataFilterOperator">
            <summary>
            PSDataFilterOperator
            <para type="synopsis">PowerShell Standard Filter type</para>
            <para type="description">PowerShell Standard Filter type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataFilterOperator.Equal">
            <summary>
            <para type="description">Equal</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterOperator.StartWith">
            <summary>
            <para type="description">StartWith</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterOperator.Contains">
            <summary>
            <para type="description">Contains</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterOperator.NotEqual">
            <summary>
            <para type="description">NotEqual</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterOperator.EndsWith">
            <summary>
            <para type="description">EndsWith</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterOperator.NotContains">
            <summary>
            <para type="description">NotContains</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataFilterCryptedOperator">
            <summary>
            PSDataFilterCryptedOperator
            <para type="synopsis">PowerShell Crypted Filter type</para>
            <para type="description">PowerShell Crypted Filter type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataFilterCryptedOperator.Equal">
            <summary>
            <para type="description">Equal</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterCryptedOperator.NotEqual">
            <summary>
            <para type="description">NotEqual</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataFilterField">
            <summary>
            PSDataFilterField
            <para type="synopsis">PowerShell Filter Field type</para>
            <para type="description">PowerShell Filter Field type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataFilterField.UserName">
            <summary>
            <para type="description">UserName</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterField.Email">
            <summary>
            <para type="description">MailAddress</para>
            </summary>
        </member>
        <member name="F:MFA.PSDataFilterField.PhoneNumber">
            <summary>
            <para type="description">PhoneNumber</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataFilterCryptedField">
            <summary>
            PSDataFilterCryptedField
            <para type="synopsis">PowerShell Crypted Filter Field type</para>
            <para type="description">PowerShell Crypted Filter Field type for Get-MFAUsers</para>
            </summary>   
        </member>
        <member name="F:MFA.PSDataFilterCryptedField.UserName">
            <summary>
            <para type="description">UserName</para>
            </summary>
        </member>
        <member name="T:MFA.PSAuthenticatorAttachmentKind">
            <summary>
            PSAuthenticatorAttachmentKind
            <para type="synopsis">PowerShell Authenticator Attachement Kind</para>
            <para type="description">PowerShell PowerShell Authenticator Attachement Kind for Get-MFAProvider Biometrics</para>
            </summary>   
        </member>
        <member name="F:MFA.PSAuthenticatorAttachmentKind.Empty">
            <summary>
            <para type="description">Empty value</para>
            </summary>
        </member>
        <member name="F:MFA.PSAuthenticatorAttachmentKind.Platform">
            <summary>
            <para type="description">Platform value</para>
            </summary>
        </member>
        <member name="F:MFA.PSAuthenticatorAttachmentKind.CrossPlatform">
            <summary>
            <para type="description">Cross-Platform value</para>
            </summary>
        </member>
        <member name="T:MFA.PSAttestationConveyancePreferenceKind">
            <summary>
            PSAttestationConveyancePreferenceKind
            <para type="synopsis">PowerShell Attestation Conveyance Preference Kind</para>
            <para type="description">PowerShell PowerShell Attestation Conveyance Preference Kind for Get-MFAProvider Biometrics</para>
            </summary>   
        </member>
        <member name="F:MFA.PSAttestationConveyancePreferenceKind.None">
            <summary>
            <para type="description">None value</para>
            </summary>
        </member>
        <member name="F:MFA.PSAttestationConveyancePreferenceKind.Direct">
            <summary>
            <para type="description">Direct value (recommended)</para>
            </summary>
        </member>
        <member name="F:MFA.PSAttestationConveyancePreferenceKind.Indirect">
            <summary>
            <para type="description">InDirect value (recommended)</para>
            </summary>
        </member>
        <member name="T:MFA.PSUserVerificationRequirementKind">
            <summary>
            PSUserVerificationRequirementKind
            <para type="synopsis">PowerShell User Verification Requirement Kind</para>
            <para type="description">PowerShell PowerShell User Verification Requirement Kind for Get-MFAProvider Biometrics</para>
            </summary>   
        </member>
        <member name="F:MFA.PSUserVerificationRequirementKind.Preferred">
            <summary>
            <para type="description">Preferred value (recommended)</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserVerificationRequirementKind.Required">
            <summary>
            <para type="description">Required value (recommended)</para>
            </summary>
        </member>
        <member name="F:MFA.PSUserVerificationRequirementKind.Discouraged">
            <summary>
            <para type="description">Discouraged value (recommended)</para>
            </summary>
        </member>
        <member name="T:MFA.PSCertificatesKind">
            <summary>
            PSCertificateKind
            <para type="synopsis">Self Signed certificate Kind (SSL, Client, Signing, Decrypting, All).</para>
            <para type="description">Self Signed certificate Kind (SSL, Client, Signing, Decrypting, All).</para>
            </summary>   
        </member>
        <member name="F:MFA.PSCertificatesKind.SSL">
            <summary>
            <para type="description">SSL Certificate.</para>
            </summary>
        </member>
        <member name="F:MFA.PSCertificatesKind.Client">
            <summary>
            <para type="description">Client Certificate.</para>
            </summary>
        </member>
        <member name="F:MFA.PSCertificatesKind.Signing">
            <summary>
            <para type="description">Signing Certificate.</para>
            </summary>
        </member>
        <member name="F:MFA.PSCertificatesKind.Decrypting">
            <summary>
            <para type="description">Decrypting Certificate.</para>
            </summary>
        </member>
        <member name="F:MFA.PSCertificatesKind.All">
            <summary>
            <para type="description">All usages Certificate.</para>
            </summary>
        </member>
        <member name="T:MFA.PSADFSCertificateKind">
            <summary>
            PSADFSCertificateKind
            <para type="synopsis">MFA ADFS certificate Kind (Signing, Decrypting).</para>
            /// <para type="description">MFA ADFS certificate Kind (Signing, Decrypting).</para>
            </summary>   
        </member>
        <member name="F:MFA.PSADFSCertificateKind.Signing">
            <summary>
            <para type="description">Signing Certificate.</para>
            </summary>
        </member>
        <member name="F:MFA.PSADFSCertificateKind.Decrypting">
            <summary>
            <para type="description">Decrypting certificate.</para>
            </summary>
        </member>
        <member name="T:MFA.PSKeyMgtOptions">
            <summary>
            PSKeyMgtOptions
            <para type="synopsis">Certificates Kind for ACLs.</para>
            /// <para type="description">Certificates Kind for ACLs and cleaning orphaned keys.</para>
            </summary>    
        </member>
        <member name="F:MFA.PSKeyMgtOptions.AllCerts">
            <summary>
            <para type="description">All Certificates checked.</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyMgtOptions.MFACerts">
            <summary>
            <para type="description">MFA specific Certificates checked.</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyMgtOptions.ADFSCerts">
            <summary>
            <para type="description">ADFS Certificates checked (subject beginning by "ADFS".</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyMgtOptions.SSLCerts">
            <summary>
            <para type="description">Wilcard SSL Certificates checked (subject beginning by *. .</para>
            </summary>
        </member>
        <member name="T:MFA.PSKeyAutoCleanUp">
            <summary>
            PSKeyAutoCleanUp
            <para type="synopsis">Persistence options for Cleanning Orphaned private Keys.</para>
            /// <para type="description">options for automating Orphaned private Keys cleanup.</para>
            </summary>    
        </member>
        <member name="F:MFA.PSKeyAutoCleanUp.None">
            <summary>
            <para type="description">None, do not change anything.</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyAutoCleanUp.Enable">
            <summary>
            <para type="description">Enable persistent AutoCleanUp.</para>
            </summary>
        </member>
        <member name="F:MFA.PSKeyAutoCleanUp.Disable">
            <summary>
            <para type="description">Disable persistent AutoCleanUp.</para>
            </summary>
        </member>
        <member name="T:MFA.MFACmdlet">
            <summary>
            MFACmdlet class
            </summary>
        </member>
        <member name="M:MFA.MFACmdlet.GetHostForVerbose">
            <summary>
            GetHostForVerbose() method 
            </summary>
        </member>
        <member name="M:MFA.MFACmdlet.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.GetMFAUser">
            <summary>
            <para type="synopsis">Get MFA Users.</para>
            <para type="description">Get a collection of users registered with MFA.</para>
            <para type="description">You can specifiy an Identity (upn), specify filters or use paging.</para>
            <para type="description">You can update users with Set-MFAUsers.</para>
            </summary>
            <example>
              <para>Get all users registered with MFA, store results in variable.</para>
              <para>$users = Get-MFAUsers</para>
            </example>
            <example>
              <para>Get all users registered with MFA, incuding disabled users.</para>
              <para>Get-MFAUsers -all</para> 
            </example>
            <example>
              <para>get all users registered with MFA whose the upn start with "neos", including disabled, display result count.</para>
              <para>Get-MFAUsers -FilterValue neos -FilterOperator StartWith -IncludeDisabled -ShowCount</para>
              <para>Get-MFAUsers -Value neos -Operator StartWith -All -ShowCount -SortOrder UserName</para>
            </example>
        </member>
        <member name="P:MFA.GetMFAUser.Identity">
            <summary>
            <para type="description">identity of the user to selected (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.IncludeDisabled">
            <summary>
            <para type="description">Include disabled users in results.</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.FilterValue">
            <summary>
            <para type="description">When using filtering this is the value property for filter (can contains wilcards). alias (Value, VAL).</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.FilterMethod">
            <summary>
            <para type="description">When using filtering this is the Preferred method filter (Phone, Email, ...). alias (Method).</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.PagingSize">
            <summary>
            <para type="description">When using paging this is the Page size.</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.CurrentPage">
            <summary>
            <para type="description">When using paging this is the Current Page.</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.ShowCount">
            <summary>
            ShowTotalCount property
            <para type="description">Show the numers of rows selected.</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAUser.SortDirection">
            <summary>
            <para type="description">When using sorting this is sort direction (asc, desc).</para>
            </summary>
        </member>
        <member name="M:MFA.GetMFAUser.GetDynamicParameters">
            <summary>
            <para type="description">Filters and Orders Properties.</para>
            <para type="description">When using sorting this is the Filed user for ordering results.</para>
            <para type="description">When using filtering this is the operator property for filter. alias (Operator, OP).</para>
            </summary>
        </member>
        <member name="M:MFA.GetMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAUser.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAUser.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAUser.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.PSDataFieldParameters">
            <summary>
            <para type="description">Standard Dynamic Parameter.</para>
            </summary>
        </member>
        <member name="M:MFA.PSDataFieldParameters.#ctor(Neos.IdentityServer.MultiFactor.DataFilterObject,Neos.IdentityServer.MultiFactor.DataOrderObject)">
            <summary>
            PSDataFieldParameters constructor
            </summary>
            <param name="filter"></param>
            <param name="order"></param>
        </member>
        <member name="P:MFA.PSDataFieldParameters.FilterField">
            <summary>
            <para type="description">When using filtering this is the property for filter. alias (Field, ATTR).</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldParameters.SortOrder">
            <summary>
            <para type="description">SortOrder property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldParameters.FilterOperator">
            <summary>
            <para type="description">FilterOperator property.</para>
            Data property
            </summary>
        </member>
        <member name="T:MFA.PSDataFieldMixedParameters">
            <summary>
            <para type="description">Mixed Dynamic Parameter.</para>
            </summary>
        </member>
        <member name="M:MFA.PSDataFieldMixedParameters.#ctor(Neos.IdentityServer.MultiFactor.DataFilterObject,Neos.IdentityServer.MultiFactor.DataOrderObject,System.Management.Automation.Host.PSHost)">
            <summary>
            PSDataFieldMixedParameters constructor
            </summary>
            <param name="filter"></param>
            <param name="order"></param>
            <param name="host"></param>
        </member>
        <member name="P:MFA.PSDataFieldMixedParameters.FilterField">
            <summary>
            <para type="description">When using filtering this is the property for filter. alias (Field, ATTR).</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldMixedParameters.SortOrder">
            <summary>
            <para type="description">SortOrder property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldMixedParameters.FilterOperator">
            <summary>
            <para type="description">FilterOperator Property</para>
            </summary>
        </member>
        <member name="T:MFA.PSDataFieldCryptedParameters">
            <summary>
            <para type="description">Crypted Dynamic Parameter.</para>
            </summary>
        </member>
        <member name="M:MFA.PSDataFieldCryptedParameters.#ctor(Neos.IdentityServer.MultiFactor.DataFilterObject,Neos.IdentityServer.MultiFactor.DataOrderObject)">
            <summary>
            PSDataFieldCryptedParameters constructor
            </summary>
            <param name="filter"></param>
            <param name="order"></param>
        </member>
        <member name="P:MFA.PSDataFieldCryptedParameters.FilterField">
            <summary>
            <para type="description">When using filtering this is the property for filter. alias (Field, ATTR).</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldCryptedParameters.SortOrder">
            <summary>
            <para type="description">SortOrder property.</para>
            </summary>
        </member>
        <member name="P:MFA.PSDataFieldCryptedParameters.FilterOperator">
            <summary>
            <para type="description">FilterOperator Property</para>
            </summary>
        </member>
        <member name="T:MFA.SetMFAUser">
            <summary>
            <para type="synopsis">Update MFA Users.</para>
            <para type="description">Update a collection of users registered with MFA.</para>
            <para type="description">You can specifiy an Identity (upn), or pass a collection.</para>
            </summary>
            <example>
              <para>Update all users in collection.</para>
              <para>Set-MFAUsers $users</para>
            </example>
            <example>
              <para>Update a specific user.</para>
              <para>Set-MFAUsers -Identity user@domain.com -Email user@mailbox.com -Phone 0606050403 -Method Code</para> 
              <para>Set-MFAUsers -Identity user@domain.com -Email user@mailbox.com -Phone 0606050403 -PIN 2451 -Method Code -ResetKey</para> 
            </example>
            <example>
              <para>Update users and reset SecretKey.</para>
              <para>Set-MFAUsers -Identity user@domain.com -ResetKey</para> 
              <para>Set-MFAUsers $users -ResetKey</para> 
            </example>
        </member>
        <member name="P:MFA.SetMFAUser.Identity">
            <summary>
            <para type="description">identity of the updated user (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.MailAddress">
            <summary>
            <para type="description">email address of the updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.PhoneNumber">
            <summary>
            <para type="description">phone number of the updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.Method">
            <summary>
            <para type="description">MFA Method for the updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.Pin">
            <summary>
            <para type="description">Pin code of selected users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.Enabled">
            <summary>
            <para type="description">Enabled status for the selected users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.EmailForNewKey">
            <summary>
            <para type="description">EmailForNewKey allow email when updating Key for MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.ResetKey">
            <summary>
            <para type="description">Regenerate a new secret key for the selected users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAUser.Data">
            <summary>
            <para type="description">Collection of users to update.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAUser.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.AddMFAUser">
            <summary>
            <para type="synopsis">Add MFA Users.</para>
            <para type="description">Add user(s) to MFA System.</para>
            <para type="description">You can specifiy an Identity (upn), or pass a collection.</para>
            </summary>
            <example>
              <para>Add all users in collection.</para>
              <para>Add-MFAUsers $users</para>
            </example>
            <example>
              <para>Add a specific user.</para>
              <para>Add-MFAUsers -Identity user@domain.com -Email user@mailbox.com -Phone 0606050403 -Method Code</para> 
              <para>Add-MFAUsers -Identity user@domain.com -Email user@mailbox.com -Phone 0606050403 -PIN 2451 -Method Code -NoNewKey</para> 
              <para>Add-MFAUsers $users -Method Code -NNewKey</para> 
            </example>
        </member>
        <member name="P:MFA.AddMFAUser.Identity">
            <summary>
            <para type="description">identity of the new user (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.MailAddress">
            <summary>
            <para type="description">email address of the new user.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.PhoneNumber">
            <summary>
            <para type="description">phone number of the new user.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.Method">
            <summary>
            <para type="description">MFA Method for the new users.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.Pin">
            <summary>
            <para type="description">Pin code of selected users.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.Enabled">
            <summary>
            <para type="description">Enabled status for the new users.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.NoNewKey">
            <summary>
            <para type="description">Regenerate a new secret key for the selected users.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.EmailForNewKey">
            <summary>
            <para type="description">EmailForNewKey allow Key email when create a new Key for MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.AddMFAUser.Data">
            <summary>
            <para type="description">Collection of users to add.</para>
            </summary>
        </member>
        <member name="M:MFA.AddMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.AddMFAUser.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.DeleteMFAUser">
            <summary>
            <para type="synopsis">Delete MFA Users.</para>
            <para type="description">Remove user(s) from MFA System.</para>
            <para type="description">You can specifiy an Identity (upn), or pass a collection.</para>
            </summary>
            <example>
              <para>remove all users in collection.</para>
              <para>Remove-MFAUsers $users</para>
            </example>
            <example>
              <para>Remove a specific user.</para>
              <para>Remove-MFAUsers -Identity user@domain.com</para> 
            </example>
        </member>
        <member name="P:MFA.DeleteMFAUser.Identity">
            <summary>
            <para type="description">identity of the user to be removed (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.DeleteMFAUser.Data">
            <summary>
            <para type="description">Collection of users to be removed from MFA.</para>
            </summary>
        </member>
        <member name="M:MFA.DeleteMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.DeleteMFAUser.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="T:MFA.EnableMFAUser">
            <summary>
            <para type="synopsis">Enable MFA Users.</para>
            <para type="description">Enable user(s) in MFA System.</para>
            <para type="description">You can specifiy an Identity (upn), or pass a collection.</para>
            </summary>
            <example>
              <para>enable all users in collection.</para>
              <para>Enable-MFAUsers $users</para>
            </example>
            <example>
              <para>Enable a specific user.</para>
              <para>Enable-MFAUsers -Identity user@domain.com</para> 
            </example>
        </member>
        <member name="P:MFA.EnableMFAUser.Identity">
            <summary>
            <para type="description">identity of the user to be enabled (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.EnableMFAUser.Data">
            <summary>
            <para type="description">Collection of users to be enabled for MFA (must be registered before with Add-MFAUsers.</para>
            </summary>
        </member>
        <member name="M:MFA.EnableMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.EnableMFAUser.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="T:MFA.DisableMFAUser">
            <summary>
            <para type="synopsis">Disable MFA Users.</para>
            <para type="description">Disable user(s) in MFA System.</para>
            <para type="description">You can specifiy an Identity (upn), or pass a collection.</para>
            </summary>
            <example>
              <para>disable all users in collection.</para>
              <para>Disable-MFAUsers $users</para>
            </example>
            <example>
              <para>Disable a specific user.</para>
              <para>Disable-MFAUsers -Identity user@domain.com</para> 
            </example>
        </member>
        <member name="P:MFA.DisableMFAUser.Identity">
            <summary>
            <para type="description">identity of the user to be disabled (upn).</para>
            </summary>
        </member>
        <member name="P:MFA.DisableMFAUser.Data">
            <summary>
            <para type="description">Collection of users to be disabled for MFA (must be registered before with Add-MFAUsers.</para>
            </summary>
        </member>
        <member name="M:MFA.DisableMFAUser.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.DisableMFAUser.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.GetMFAFarmInformation">
            <summary>
            <para type="synopsis">Get MFA Farm Informations.</para>
            <para type="description">Get MFA farm Informations.</para>
            <para type="description">You can see Servers, behavior and initilization status.</para>
            <para type="description">If not initialized, you must run the Register-MFASystem and optionally Register-MFAComputer (2012R2).</para>
            </summary>
            <example>
              <para>Get-MFAFarmInformation</para>
            </example>
        </member>
        <member name="M:MFA.GetMFAFarmInformation.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAFarmInformation.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAFarmInformation.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.RegisterMFAComputer">
            <summary>
            <para type="synopsis">Register MFA Computer.</para>
            <para type="description">Regiter an ADFS server from your farm.</para>
            <para type="description">If your farm is Windows 2016 (behavior 3), Register-MFASystem is doing the job.</para>
            <para type="description">For Windows 2012R2, you must register your ADFS server (not proxies).</para>
            <para type="description">If you Add a new server to your Farm, you must register it.</para>
            <para type="description">Server list is usefull to restart services, and participate to notification system for updating configuration automatically without restarting ADFS service.</para>
            <para type="description">This Cmdlet does not support remoting.</para>
            </summary>
            <example>
              <para>Register-MFAComputer -ServerName otheradfs.domain.com</para>
            </example>
        </member>
        <member name="P:MFA.RegisterMFAComputer.ServerName">
            <summary>
            <para type="description">Server Name to add in MFA farm.</para>
            </summary>
        </member>
        <member name="P:MFA.RegisterMFAComputer.NoRSAKeyReset">
            <summary>
            <para type="description">Disable RSA key Reset for MFA Passwords.</para>
            NoRSAKeyReset property
            </summary>
        </member>
        <member name="M:MFA.RegisterMFAComputer.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RegisterMFAComputer.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UnRegisterMFAComputer">
            <summary>
            <para type="synopsis">UnRegister MFA Computer.</para>
            <para type="description">UnRegiter an ADFS server from your farm.</para>
            <para type="description">If you want to remove a server from your farm, you must Unregister it.</para>
            <para type="description">Server list is usefull to restart services, and participate to notification system for updating configuration automatically without restarting ADFS service.</para>
            <para type="description">This Cmdlet does not support remoting.</para>
            </summary>
            <example>
              <para>UnRegister-MFAComputer</para>
            </example>
        </member>
        <member name="P:MFA.UnRegisterMFAComputer.ServerName">
            <summary>
            <para type="description">Server Name to add in MFA farm.</para>
            </summary>
        </member>
        <member name="M:MFA.UnRegisterMFAComputer.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UnRegisterMFAComputer.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.GetMFAComputers">
            <summary>
            <para type="synopsis">Get MFA Computers.</para>
            <para type="description">Get ADFS Computers properties.</para>
            </summary>
            <example>
              <para>Get-MFAComputers</para>
              <para>Get-MFAComputers myadfsserver.domain.com</para>
              <para>Get-MFAComputers -ShowCount</para>
            </example>
        </member>
        <member name="P:MFA.GetMFAComputers.Identity">
            <summary>
            <para type="description">identity of the computer (fqdn).</para>
            </summary>
        </member>
        <member name="P:MFA.GetMFAComputers.ShowCount">
            <summary>
            <para type="description">Displaye the count of computers.</para>
            ShowCount property
            </summary>
        </member>
        <member name="M:MFA.GetMFAComputers.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAComputers.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAComputers.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.RestartMFAComputerServices">
            <summary>
            <para type="synopsis">Restart ADFS services.</para>
            <para type="description">Restart ADFS Services for one ADFS Computer.</para>
            </summary>
            <example>
              <para>Restart-MFAComputerServices</para>
              <para>Restart-MFAComputerServices myadfsserver.domain.com</para>
            </example>
        </member>
        <member name="P:MFA.RestartMFAComputerServices.Identity">
            <summary>
            <para type="description">identity of the computer (fqdn), if empty local computer is used.</para>
            </summary>
        </member>
        <member name="M:MFA.RestartMFAComputerServices.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RestartMFAComputerServices.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.RestartMFAComputerServices.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.RegisterMFASystem">
            <summary>
            <para type="synopsis">Register Configuration for MFA.</para>
            <para type="description">Register MFA components with ADFS. Activate it</para>
            </summary>
            <example>
              <para>Register-MFASystem</para>
              <para>Create a new empty configuration for MFA. You must complete configuration with other CmdLets</para>
            </example>
        </member>
        <member name="P:MFA.RegisterMFASystem.NoRSAKeyReset">
            <summary>
            <para type="description">Disable RSA key Reset for MFA Passwords.</para>
            NoRSAKeyReset property
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ImportMFASystemConfiguration">
            <summary>
            <para type="synopsis">Update MFA Configuration with a configuration file.</para>
            <para type="description">Update Configuration of MFA components. Activate it</para>
            </summary>
            <example>
              <para>Import-MFASystemConfiguration -ImportFilePath c:\temp\mysavedconfig.xml</para>
              <para>Import a new configuration for MFA with a file. You must complete configuration with other CmdLets</para>
            </example>
        </member>
        <member name="P:MFA.ImportMFASystemConfiguration.ImportFilePath">
            <summary>
            <para type="description">Set the name of the backup file.</para>
            BackupFileName property
            </summary>
        </member>
        <member name="M:MFA.ImportMFASystemConfiguration.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ImportMFASystemConfiguration.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ExportMFASystemConfiguration">
            <summary>
            <para type="synopsis">Save current MFA Configuration to a file.</para>
            <para type="description">Save current Configuration of MFA components</para>
            </summary>
            <example>
              <para>Export-MFASystemConfiguration -ExportFilePath c:\temp\mysavedconfig.xml</para>
              <para>Export current MFA configuration to the specified file.</para>
            </example>
        </member>
        <member name="P:MFA.ExportMFASystemConfiguration.ExportFilePath">
            <summary>
            <para type="description">Set the name of the export file.</para>
            ExportFilePath property
            </summary>
        </member>
        <member name="M:MFA.ExportMFASystemConfiguration.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ExportMFASystemConfiguration.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UnRegisterMFASystem">
            <summary>
            <para type="synopsis">UnRegister Configuration for MFA.</para>
            <para type="description">UnRegister MFA components from ADFS. DeActivate it</para>
            </summary>
            <example>
              <para>UnRegister-MFASystem</para>
              <para>Remove MFA configuration from ADFS. </para>
            </example>
        </member>
        <member name="M:MFA.UnRegisterMFASystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UnRegisterMFASystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.EnableMFASystem">
            <summary>
            <para type="synopsis">Enable MFA.</para>
            <para type="description">Enable MFA System (if initialized)</para>
            </summary>
            <example>
              <para>Enable-MFASystem</para>
              <para>Enable MFA configuration from ADFS. </para>
            </example>
        </member>
        <member name="M:MFA.EnableMFASystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.EnableMFASystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.DisableMFASystem">
            <summary>
            <para type="synopsis">Disable MFA.</para>
            <para type="description">Disable MFA System (if initialized)</para>
            </summary>
            <example>
              <para>Disable-MFASystem</para>
              <para>Disable MFA configuration from ADFS. </para>
            </example>
        </member>
        <member name="M:MFA.DisableMFASystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.DisableMFASystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.GetMFAConfig">
            <summary>
            <para type="synopsis">Get Configuration.</para>
            <para type="description">Get main configuration options.</para>
            </summary>
            <example>
              <para>Get-MFAConfig</para>
              <para>Display MFA general configuration</para>
            </example>
            <example>
              <para>$cfg = Get-MFAConfig</para>
              <para>Get MFA configuration options and store it into variable.</para>
            </example>
        </member>
        <member name="M:MFA.GetMFAConfig.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAConfig.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAConfig.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAConfig.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAConfig">
            <summary>
            <para type="synopsis">Set General Configuration.</para>
            <para type="description">Set main configuration options.</para>
            </summary>
            <example>
              <para>** Using PowserShell Variables</para>
              <para>$cfg = Get-MFAConfig</para>
              <para>$cfg.DefaultCountryCode = "us"</para>
              <para>Set-MFAConfig $cfg</para>
            </example>
            <example>
              <para>** Using configuration options with completion.</para>
              <para>Set-MFAConfig -AdminContact username@domainname -UserFeatures AdministrativeMode, AllowEnrollment, AllowProvideInformations</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAConfig.Config">
            <summary>
            <para type="description">Config parameter, a variable of type PSConfig.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.AdminContact">
            <summary>
            <para type="description">Administrators email, used in administrative emails sent to users.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.Issuer">
            <summary>
            <para type="description">Issuer description (eg "my company").</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.DefaultCountryCode">
            <summary>
            <para type="description">Default contry code, used for SMS calls .</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.DefaultProviderMethod">
            <summary>
            <para type="description">Default provider when User method equals "Choose".</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.UserFeatures">
            <summary>
            <para type="description">Policy attributes for users management and registration.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.CustomUpdatePassword">
            <summary>
            <para type="description">Use or not our implementation for changing user password,if not we are using /ADFS/Portal/updatepasswor.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.KeepMySelectedOptionOn">
            <summary>
            <para type="description">Let user to change the default MFA provider for later use.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.ChangeNotificationsOn">
            <summary>
            <para type="description">Send email notifications when a user update his configuration.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.UseOfUserLanguages">
            <summary>
            <para type="description">Use of User's browser laguages instead or standard localization features.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAConfig.AdvertisingDays">
            <summary>
            <para type="description">Policy attributes for warnings to users.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAConfig.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAConfig.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.GetMFAStore">
            <summary>
            <para type="synopsis">Get MFA Store Configuration.</para>
            <para type="description">Get MFA Store configuration options.</para>
            <para type="description"></para>
            </summary>
            <example>
              <para>Get-MFAStore -Store ADDS</para>
              <para>Get-MFAStore -Store SQL</para>
            </example>
            <example>
              <para>$c = Get-MFAStore -Store ADDS</para>
              <para>$c = Get-MFAStore -Store SQL</para>
            </example>
        </member>
        <member name="P:MFA.GetMFAStore.Store">
            <summary>
            <para type="description">Store Configuration mode, (ADDS, SQL) Required.</para>
            </summary>
        </member>
        <member name="M:MFA.GetMFAStore.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAStore.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAStore.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAStore.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAStore">
            <summary>
            <para type="synopsis">Set MFA Store Configuration.</para>
            <para type="description">Set MFA Store configuration options.</para>
            </summary>
            <example>
              <para>** Using PowserShell Variables</para>
              <para>$cfg = Get-MFAStore -Store ADDS</para>
              <para>$cfg.Active = $false</para>
              <para>Set-MFAStore -Store ADDS $cfg</para>
            </example>
            <example>
              <para>** Using auto completion</para>
              <para>Set-MFAStore -Store ADDS -Active $true -MaxRows 10000 -UserFeatures</para>
            </example>
            <example>
              <para>** Using PowserShell Variables</para>
              <para>$cfg = Get-MFAStore -Store SQL</para>
              <para>$cfg.MaxRows = 5000</para>
              <para>Set-MFAStore -Store SQL $cfg</para>
            </example>
            <example>
              <para>** Using auto completion</para>
              <para>Set-MFAStore -Store SQL -Active $false -MaxRows 10000 -ConnectionString = "your connect string"</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAStore.Store">
            <summary>
            <para type="description">Store Configuration mode, (ADDS, SQL) Required.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAStore.Config">
            <summary>
            <para type="description">Config parameter, a variable of type PSConfigSQL.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAStore.GetDynamicParameters">
            <summary>
            <para type="description">Set the value of Provider configuration.</para>
            GetDynamicParameters implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAStore.BeginProcessing">
            <summary>
            BeginProcessing method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAStore.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ADDSStoreDynamicParameters">
            <summary>
            <para type="description">Set TOTP Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.Active">
            <summary>
            <para type="description">If true, users metadata are stored in ADDS attributes.</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.KeyAttribute">
            <summary>
            <para type="description">ADDS attribute name user to store user secret key (default msDS-cloudExtensionAttribute10).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.MailAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user custom mail address (default msDS-cloudExtensionAttribute11).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.PhoneAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user phone number (default msDS-cloudExtensionAttribute12).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.MethodAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user preferred method (Code, Phone, Mail) (default msDS-cloudExtensionAttribute13).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.OverrideMethodAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user preferred method (Code, Phone, Mail) (default msDS-cloudExtensionAttribute14).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.EnabledAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user status with MFA (default msDS-cloudExtensionAttribute18).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.PinAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store user pin code (default msDS-cloudExtensionAttribute15).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.PublicKeyCredentialAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store multiple user Public Keys Credential (recommended msDS-KeyCredentialLink or othetMailbox).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.ClientCertificateAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store Client Certificate (default msDS-cloudExtensionAttribute16).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.RSACertificateAttribute">
            <summary>
            <para type="description">ADDS attribute name used to store RSA Certificate (default msDS-cloudExtensionAttribute17).</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.MaxRows">
            <summary>
            <para type="description">ADDS value indicating the max row per request.</para>
            </summary>
        </member>
        <member name="P:MFA.ADDSStoreDynamicParameters.UseSSL">
            <summary>
            <para type="description">ADDS value indicating if we must use ldap or ldaps for requests.</para>
            </summary>
        </member>
        <member name="T:MFA.SQLStoreDynamicParameters">
            <summary>
            <para type="description">Set value for SQL Store.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.Active">
            <summary>
            <para type="description">If true, users metadata are stored in SQL database.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.ConnectionString">
            <summary>
            <para type="description">Get or Set the connection string used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.MaxRows">
            <summary>
            <para type="description">Get or Set the max rows limit used to access MFA SQL Database.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.IsAlwaysEncrypted">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 and up Always Encrypted feature. default = false.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.AECCertificateValidity">
            <summary>
            <para type="description">Get or Set the validity of the generated certificate (in years, 5 per default).</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.AECCertificateThumbPrint">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 and up Always Encrypted feature Thumprint.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.AECCertificateReuse">
            <summary>
            <para type="description">Get or Set the indicating if we are reusing an existing certificate.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLStoreDynamicParameters.AECCryptoKeyName">
            <summary>
            <para type="description">Get or Set the SQLServer 2016 crypting key name.</para>
            </summary>
        </member>
        <member name="T:MFA.CustomStoreDynamicParameters">
            <summary>
            <para type="description">Set value for Custom Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.Active">
            <summary>
            <para type="description">If true, users metadata are stored in Custom Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.ConnectionString">
            <summary>
            <para type="description">Set the connection string used to access MFA Custom Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.MaxRows">
            <summary>
            <para type="description">Set the max rows limit used to access MFA Custom Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.DataRepositoryFullyQualifiedImplementation">
            <summary>
            <para type="description">Set the Assembly description used to access MFA Custom Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.KeysRepositoryFullyQualifiedImplementation">
            <summary>
            <para type="description">Set the Assembly description used to access MFA Custom Keys Store.</para>
            </summary>
        </member>
        <member name="P:MFA.CustomStoreDynamicParameters.Parameters">
            <summary>
            <para type="description">Set the Assembly Parameters used to access MFA Custom Store.</para>
            </summary>
        </member>
        <member name="T:MFA.SetMFAActiveDirectoryTemplate">
            <summary>
            <para type="synopsis">Choose between set of attributes when choosing to use ADDS as repository for MFA.</para>
            <para type="description">Choose between set of attributes when choosing to use ADDS as repository for MFA.</para>
            </summary>
            <example>
              <para>Set-MFAActiveDirectoryTemplate -Kind SchemaAll | Schema2016 | SchemaMFA </para>
            </example>
        </member>
        <member name="P:MFA.SetMFAActiveDirectoryTemplate.Kind">
            <summary>
            <para type="description">Template type for ADDS Attributes configuration.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAActiveDirectoryTemplate.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.GetMFAProvider">
            <summary>
                <para type="synopsis">Get MFA Provider Configuration.</para>
                <para type="description">Get MFA Provider configuration options.</para>
                <para type="description"></para>
            </summary>
            <example>
                <para>Get-MFAProvider -ProviderType External</para>
                <para>Get MFA Provider configuration for (Code, Email, External, Azure, Biometrics)</para>
            </example>
        </member>
        <member name="P:MFA.GetMFAProvider.ProviderType">
            <summary>
            <para type="description">Provider Type parameter, (Code, Email, External, Azure, Biometrics) Required.</para>
            </summary>
        </member>
        <member name="M:MFA.GetMFAProvider.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAProvider.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFAProvider.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFAProvider.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAProvider">
            <summary>
            <para type="synopsis">Set MFA Provider Configuration.</para>
            <para type="description">Set MFA Provider configuration options.</para>
            </summary>
            <example>
              <para>Set-MFAProvider -ProviderType Code -Data $cfg</para>
            </example>
            <example>
              <para>$cfg = Get-MFAProvider -ProviderType email</para>
              <para>$cfg.Host = smtp.office365.com</para>
              <para>Set-MFAProvider Email $cfg</para>
            </example>
            <example>
              <para></para>
              <para>$cfg = Get-MFAProvider -ProviderType email</para>
              <para>$cfg.MailOTP.Templates</para>
              <para>$cfg.MailOTP.AddTemplate(1036, "c:\temp\mytemplate.html")</para>
              <para>$cfg.MailOTP.SetTemplate(1033, "c:\temp\mytemplate2.html")</para>
              <para>$cfg.MailOTP.RemoveTemplate(1033)</para>
              <para>Set-MFAProvider -ProviderType email $cfg</para>
            </example>
            <example>
              <para>Set-MFAProvider -ProviderType email -UserName user@domain.com -Password p@ssw0rd</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAProvider.ProviderType">
            <summary>
            <para type="description">Provider Type parameter, (Code, Email, External, Azure, Biometrics) Required.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAProvider.Config">
            <summary>
            <para type="description">Config parameter, a variable of type PSConfigSQL.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAProvider.GetDynamicParameters">
            <summary>
            <para type="description">Set the value of Provider configuration.</para>
            GetDynamicParameters implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAProvider.BeginProcessing">
            <summary>
            BeginProcessing method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAProvider.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAProvider.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAProvider.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.TOTPDynamicParameters">
            <summary>
            <para type="description">Set TOTP Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>       
        </member>
        <member name="P:MFA.TOTPDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.TOTPShadows">
            <summary>
            <para type="description">TOTP Provider Shadow codes. 2 by default</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.Algorithm">
            <summary>
            <para type="description">TOTP Provider Hash algorithm. SHA1 by default</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.Digits">
            <summary>
            <para type="description">TOTP Provider Code len between 4 and 8. 6 by default</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.Duration">
            <summary>
            <para type="description">TOTP Provider Code renew duration in seconds. 30s by default</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.WizardOptions">
            <summary>
            <para type="description">Set TOP Wizard Application list enabled/ disabled.</para>
            <para type="description">All, all links are displayed.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.KeysFormat">
            <summary>
            <para type="description">Type of generated Keys for users (RNG, RSA, CUSTOM RSA).</para>
            <para type="description">Changing the key format, invalidate all the users secret keys previously used.</para>
            <para type="description">RSA and RSA Custom are using Certificates. Custom RSA must Use Specific database to the keys and certs, one for each user, see New-MFASecretKeysDatabase cmdlet.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.KeySize">
            <summary>
            <para type="description">Used to trim the key at a fixed size, when you use RSA the key is very long, and QRCode is often too big for TOTP Application (1024 is a good size, even if RSA key is 2048 bytes long).</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.CustomAuthenticatorLogo">
            <summary>
            <para type="description">File name for image (60x60 px) Used for custom Authenticator.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.CustomAuthenticatorMSStoreLink">
            <summary>
            <para type="description">URL link to download from Microsoft Store.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.CustomAuthenticatorGooglePlayLink">
            <summary>
            <para type="description">URL link to download from Google Play.</para>
            </summary>
        </member>
        <member name="P:MFA.TOTPDynamicParameters.CustomAuthenticatorAppStoreLink">
            <summary>
            <para type="description">URL link to download from App Store.</para>
            </summary>
        </member>
        <member name="T:MFA.MailDynamicParameters">
            <summary>
            <para type="description">Set Mail Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>       
        </member>
        <member name="P:MFA.MailDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.From">
            <summary>
            <para type="description">Mail from property.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.UserName">
            <summary>
            <para type="description">Account Name used to access Mail platform.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Password">
            <summary>
            <para type="description">Password used with Username to access Mail platform.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Host">
            <summary>
            <para type="description">Mail platform Host eg : smtp.office365.com.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Port">
            <summary>
            <para type="description">Mail platform IP Port eg : 587.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.UseSSL">
            <summary>
            <para type="description">Mail platform SSL option.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Company">
            <summary>
            <para type="description">Your company description, tis is used in default mails contents.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.Anonymous">
            <summary>
            <para type="description">indicate if connetion is Anonymous.</para>
            </summary>
        </member>
        <member name="P:MFA.MailDynamicParameters.DeliveryNotifications">
            <summary>
            <para type="description">if your want Delivery Failures, Delayed delivery or nothing (default).</para>
            </summary>
        </member>
        <member name="T:MFA.ExternalDynamicParameters">
            <summary>
            <para type="description">Set External Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>       
        </member>
        <member name="P:MFA.ExternalDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.Company">
            <summary>
            <para type="description">your company name, can be used to format External message sent to user.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.Sha1Salt">
            <summary>
            <para type="description">Optional Salt value, if your gateway support this feature.</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.IsTwoWay">
            <summary>
            <para type="description">Pass parameter to your implemented provider, indicating if the mode is Request/Response</para>
            </summary>
        </member>
        <member name="P:MFA.ExternalDynamicParameters.Timeout">
            <summary>
            <para type="description">TimeOut Before cancelling operation</para>
            </summary>
        </member>
        <member name="T:MFA.AzureDynamicParameters">
            <summary>
            <para type="description">Set Azure Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>       
        </member>
        <member name="P:MFA.AzureDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.TenantId">
            <summary>
            <para type="description">your Azure/o365 tenantId / tenant name.</para>
            </summary>
        </member>
        <member name="P:MFA.AzureDynamicParameters.Thumbprint">
            <summary>
            <para type="description">Thumbprint of the Azure cetificate (Done when configuring Azure MFA.</para>
            </summary>
        </member>
        <member name="T:MFA.BiometricDynamicParameters">
            <summary>
            <para type="description">Set Biometric Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.Enabled">
            <summary>
            <para type="description">Provider Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.EnrollWizard">
            <summary>
            <para type="description">Provider Enrollment Wizard Enabled property.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.ForceWizard">
            <summary>
            <para type="description">Provider Force Wizard if user dosen't complete during signing.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.IsRequired">
            <summary>
            <para type="description">Force users to use this provider (mandatory for registration or not).</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.PinRequired">
            <summary>
            <para type="description">Set if additionnal verification with PIN (locally administered) must be done.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.PinRequirements">
            <summary>
            <para type="description">Set if additionnal verification with PIN when user is not verified.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Full qualified implementation class for replacing default provider.</para>
            </summary>       
        </member>
        <member name="P:MFA.BiometricDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for replacing default provider.</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.Timeout">
            <summary>
            <para type="description">Timeout property (in milliseconds).</para> 
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.TimestampDriftTolerance">
            <summary>
            <para type="description">Timestamp Drift Tolerance property (in miliseconds).</para> 
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.DirectLogin">
            <summary>
            <para type="description">When Biometrics is default method, authentication directly called a first time</para> 
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.ServerDomain">
            <summary>
            <para type="description">Server Domain property.</para> 
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.ServerName">
            <summary>
            <para type="description">Server Name property.</para> 
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.Origin">
            <summary>
            <para type="description">Server Uri property (url).</para>
            </summary>
        </member>
        <member name="P:MFA.BiometricDynamicParameters.ChallengeSize">
            <summary>
            <para type="description">Challenge Size property (16, 32, 48, 64 bytes) (128, 256, 384, 512 bits).</para>
            </summary>
        </member>
        <member name="T:MFA.GetMFASecurity">
            <summary>
            <para type="synopsis">Get MFA Security Configuration.</para>
            <para type="description">Get MFA Security configuration options.</para>
            </summary>
            <example>
              <para>Get-MFASecurity</para>
            </example>
            <example>
             <para>Get-MFASecurity -Kind RSA</para>
             <para>$c = Get-MFASecurity -Kind BIOMETRIC</para>
            </example>
            <example>
              <para>$c = Get-MFASecurity -Kind RNG</para>
              <para>$c.KeyGenerator = [MFA.PSKeyGeneratorMode]::ClientSecret256</para>
              <para>Set-MFASecurity -Kind RNG $c</para>
            </example>
            <example>
              <para>$c = Get-MFASecurity -Kind AES</para>
              <para>$c.AESKeyGenerator = [MFA.PSAESKeyGeneratorMode]::AESSecret1024</para>
              <para>Set-MFASecurity -Kind AES $c</para>
            </example>
        </member>
        <member name="P:MFA.GetMFASecurity.Kind">
            <summary>
            <para type="description">Provider Type parameter, (RNG, RSA, AES, CUSTOM, BIOMETRICS).</para>
            </summary>
        </member>
        <member name="M:MFA.GetMFASecurity.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFASecurity.ProcessRecord">
            <summary>
            ProcessInternalRecord method override
            </summary>
        </member>
        <member name="M:MFA.GetMFASecurity.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.GetMFASecurity.EndProcessing">
            <summary>
            EndProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFASecurity">
            <summary>
            <para type="synopsis">Set Secret Keys Configuration.</para>
            <para type="description">Set Secret Keys configuration options.</para>
            </summary>
            <example>
              <para>$cfg = Get-MFASecurity -Kind RSA</para>
              <para>$cfg.CertificatePerUser = $true</para>
              <para>Set-MFASecurity -Kind RSA $cfg</para>
            </example>
        </member>
        <member name="P:MFA.SetMFASecurity.Kind">
            <summary>
            <para type="description">Provider Type parameter, (RNG, RSA, AES, CUSTOM, BIOMETRIC).</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFASecurity.Config">
            <summary>
            <para type="description">Config parameter, a variable of type PSSecurity.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFASecurity.GetDynamicParameters">
            <summary>
            <para type="description">Set the value of Provider configuration.</para>
            GetDynamicParameters implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFASecurity.BeginProcessing">
            <summary>
            BeginProcessing method override
            </summary>
        </member>
        <member name="M:MFA.SetMFASecurity.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.SECBIOMETRICDynamicParameters">
            <summary>
            SECBIOMETRICDynamicParameters class implementation
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.AuthenticatorAttachment">
            <summary>
            <para type="description">Authenticator Attachment property (empty, Platform, Crossplatform).</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.AttestationConveyancePreference">
            <summary>
            <para type="description">Attestation Conveyance Preference property (None, Direct, Indirect).</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.UserVerificationRequirement">
            <summary>
            <para type="description">User Verification Requirement property (Preferred, Required, Discouraged).</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.Extensions">
            <summary>
            <para type="description">Extensions property (boolean) supports extensions ?.</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.ConstrainedMetadataRepository">
            <summary>
            <para type="description">ConstrainedMetadataRepository property (boolean).</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.UserVerificationMethod">
            <summary>
            <para type="description">User Verification Method property (boolean).</para>
            </summary>
        </member>
        <member name="P:MFA.SECBIOMETRICDynamicParameters.RequireResidentKey">
            <summary>
            <para type="description">Require Resident Key property (boolean).</para>
            </summary>
        </member>
        <member name="T:MFA.SECRSADynamicParameters">
            <summary>
            SECRSADynamicParameters class implementation
            </summary>
        </member>
        <member name="P:MFA.SECRSADynamicParameters.CertificateValidity">
            <summary>
            <para type="description">Certificate validity duration in Years (5 by default)</para> 
            </summary>
        </member>
        <member name="P:MFA.SECRSADynamicParameters.CertificatePerUser">
            <summary>
            <para type="description">Use a distinct certificate for each user when using KeyFormat==RSA. each certificate is deployed on ADDS or SQL Database</para> 
            </summary>
        </member>
        <member name="P:MFA.SECRSADynamicParameters.CertificateThumbprint">
            <summary>
            <para type="description">Certificate Thumbprint when using KeyFormat==RSA. the certificate is deployed on all ADFS servers in Crypting Certificates store</para> 
            </summary>
        </member>
        <member name="T:MFA.SECRNGDynamicParameters">
            <summary>
            SECRNGDynamicParameters class implementation
            </summary>
        </member>
        <member name="P:MFA.SECRNGDynamicParameters.KeyGenerator">
            <summary>
            <para type="description">Used when RNG is selected, for choosing the size of the generated random number (128 to 512 bits).</para> 
            </summary>
        </member>
        <member name="T:MFA.SECAESDynamicParameters">
            <summary>
            SECAESDynamicParameters class implementation
            </summary>
        </member>
        <member name="P:MFA.SECAESDynamicParameters.AESKeyGenerator">
            <summary>
            <para type="description">Used when RNG is selected, for choosing the size of the generated random number (512 to 1024 bits).</para> 
            </summary>
        </member>
        <member name="T:MFA.SECCUSTOMDynamicParameters">
            <summary>
            SECCUSTOMDynamicParameters class implementation
            </summary>
        </member>
        <member name="P:MFA.SECCUSTOMDynamicParameters.FullyQualifiedImplementation">
            <summary>
            <para type="description">Used when CUSTOM is selected.</para> 
            </summary>
        </member>
        <member name="P:MFA.SECCUSTOMDynamicParameters.Parameters">
            <summary>
            <para type="description">Full qualified implementation parameters for Custom Security.</para>
            </summary>
        </member>
        <member name="T:MFA.SetMFATemplateMode">
            <summary>
            <para type="synopsis">Set Policy Template.</para>
            <para type="description">Set Policy template, for managing security features like ChangePassword, Auto-registration and more.</para>
            </summary>
            <example>
              <para>Set-MFAPolicyTemplate -Template Strict</para>
              <para>Change policy template for MFA configuration</para>
            </example>
        </member>
        <member name="P:MFA.SetMFATemplateMode.Template">
            <summary>
            <para type="description">Template enumeration member. </para>
            </summary>
        </member>
        <member name="M:MFA.SetMFATemplateMode.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFATemplateMode.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.SetMFATemplateMode.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAThemeMode">
            <summary>
            <para type="synopsis">Set ADFS Theme.</para>
            <para type="description">Set ADFS Theme.</para>
            </summary>
            <example>
              <para>Set-MFAThemeMode -UIKind Default -Theme yourcompatibletheme</para>
              <para>Set-MFAThemeMode -UIKind Default2019 -Theme yourcompatibletheme</para>
              <para>Set-MFAThemeMode -UIKind Default2019 -Theme yourcompatibletheme -Paginated</para>
              <para>Change policy template for MFA configuration</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAThemeMode.UIKind">
            <summary>
            <para type="description">ADFS UI Mode.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAThemeMode.Theme">
            <summary>
            <para type="description">ADFS Theme Name.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAThemeMode.GetDynamicParameters">
            <summary>
            <para type="description">Set UI Themes 2019 configuration.</para>
            GetDynamicParameters implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAThemeMode.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAThemeMode.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAThemeMode.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.MFAThemeModeDynamicParameters">
            <summary>
            <para type="description">Set MFA Themes Options for Ui 2019.</para>
            </summary>
        </member>
        <member name="P:MFA.MFAThemeModeDynamicParameters.Paginated">
            <summary>
            <para type="description">Set the value for ADFS 2019 paginated mode.</para>
            Paginated property
            </summary>
        </member>
        <member name="T:MFA.ResetMFAThemesList">
            <summary>
            <para type="synopsis">Reset ADFS Relying Parties Themes for MFA (Reload).</para>
            <para type="description">Force Reload for ADFS Relying Parties Themes for MFA.</para>
            </summary>
            <example>
              <para>Reset-MFAThemesList</para>
            </example>
        </member>
        <member name="M:MFA.ResetMFAThemesList.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ResetMFAThemesList.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.ResetMFAThemesList.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAEncryptionVersion">
            <summary>
            <para type="synopsis">Set ADFS Theme.</para>
            <para type="description">Set ADFS Theme.</para>
            </summary>
            <example>
              <para>Set-MFAEncryptionVersion -Version V2</para>
              <para>Change encryption Librairy Version for MFA configuration</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAEncryptionVersion.Version">
            <summary>
            <para type="description">ADFS UI Mode.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAEncryptionVersion.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAEncryptionVersion.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAEncryptionVersion.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.SetMFAPrimaryAuthenticationStatus">
            <summary>
            <para type="synopsis">Set MFA Primary Authentication Status enabled/disabled (ADFS 2019 only).</para>
            <para type="description">Set MFA Primary Authentication Status.</para>
            </summary>
            <example>
              <para>MFAPrimaryAuthenticationStatus $true</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAPrimaryAuthenticationStatus.Enabled">
            <summary>
            <para type="description">Set Primary Authentication Status.</para>
            </summary>
        </member>
        <member name="P:MFA.SetMFAPrimaryAuthenticationStatus.Options">
            <summary>
            <para type="description">Set Primary Authentication Status Options.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAPrimaryAuthenticationStatus.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAPrimaryAuthenticationStatus.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="M:MFA.SetMFAPrimaryAuthenticationStatus.StopProcessing">
            <summary>
            StopProcessing method implementation
            </summary>
        </member>
        <member name="T:MFA.RegisterMFAThreatDetectionSystem">
            <summary>
            <para type="synopsis">Register MFA threat detection system.</para>
            <para type="description">Register MFA threat detection system. Activate it</para>
            </summary>
            <example>
              <para>Register-MFAThreatDetectionSystem</para>
              <para>Only available for ADFS 2019 and Up.</para>
            </example>
        </member>
        <member name="M:MFA.RegisterMFAThreatDetectionSystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RegisterMFAThreatDetectionSystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UnRegisterMFAThreatDetectionSystem">
            <summary>
            <para type="synopsis">UnRegister MFA threat detection system.</para>
            <para type="description">UnRegister MFA threat detection system. DeActivate it</para>
            </summary>
            <example>
              <para>UnRegister-MFAThreatDetectionSystem</para>
              <para>Only available for ADFS 2019 and Up.</para>    /// </example>
        </member>
        <member name="M:MFA.UnRegisterMFAThreatDetectionSystem.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UnRegisterMFAThreatDetectionSystem.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UpdateMFAThreatDetectionData">
            <summary>
            <para type="synopsis">Update MFA threat detection data.</para>
            <para type="description">Update MFA threat detection data.</para>
            </summary>
            <example>
              <para>Update-MFAThreatDetectionData</para>
              <para>Only available for ADFS 2019 and Up.</para>    /// </example>
        </member>
        <member name="M:MFA.UpdateMFAThreatDetectionData.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UpdateMFAThreatDetectionData.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.NewMFADatabase">
            <summary>
            <para type="synopsis">Create a new SQL Database for MFA.</para>
            <para type="description">Create a new SQL Database for MFA Configuration (UseActiveDirectory==false).</para>
            </summary>
            <example>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFADatabase -UserName sqlaccount -Password pass</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFADatabase -UserName Domain\ADFSaccount</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFADatabase -UserName Domain\ADFSManagedAccount$</para>
              <para></para>
              <para>When using SQL Server 2016 (and up) Always encrypted columsn</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFAKeysDatabase -UserName Domain\ADFSaccount -Encrypted</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFAKeysDatabase -UserName Domain\ADFSaccount -Encrypted -EncryptedKeyName mykey</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFAKeysDatabase -UserName Domain\ADFSManagedAccount$ -Encrypted -ReuseCertificate -ThumbPrint 0123456789ABCDEF...</para>
              <para>New-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFAKeysDatabase -UserName Domain\ADFSManagedAccount$ -Encrypted -ReuseCertificate -ThumbPrint 0123456789ABCDEF... -EncryptedKeyName mykey</para>
              <para>Create a new database for MFA, grant rights to the specified account</para>
            </example>
        </member>
        <member name="P:MFA.NewMFADatabase.ServerName">
            <summary>
            <para type="description">SQL ServerName, you must include Instance if needed eg : server\instance.</para>
            </summary>
        </member>
        <member name="P:MFA.NewMFADatabase.DatabaseName">
            <summary>
            <para type="description">Name of the SQL Database, if database exists an error is thrown.</para>
            </summary>
        </member>
        <member name="P:MFA.NewMFADatabase.UserName">
            <summary>
            <para type="description">AccountName, can be a domain, managed account : domain\adfsaccount or domain\adfsaccount$ without password, or an SQL Account with password.</para>
            </summary>
        </member>
        <member name="P:MFA.NewMFADatabase.Password">
            <summary>
            <para type="description">Password, only if the account is a SQL account, for ADFS domain do not specify password.</para>
            </summary>
        </member>
        <member name="P:MFA.NewMFADatabase.Encrypted">
            <summary>
            <para type="description">Encrypted, only if Database Server is SQLServer 2016 and Up. Encrypt data columns to be compliant with RGPD. most secure option</para>
            </summary>
        </member>
        <member name="M:MFA.NewMFADatabase.GetDynamicParameters">
            <summary>
            <para type="description">Get the values of SQL Database Encryption.</para>
            GetDynamicParameters implementation
            </summary>
        </member>
        <member name="M:MFA.NewMFADatabase.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.NewMFADatabase.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UpgradeMFADatabase">
            <summary>
            <para type="synopsis">Create a new SQL Database for MFA.</para>
            <para type="description">Create a new SQL Database for MFA Configuration (UseActiveDirectory==false).</para>
            </summary>
            <example>
              <para>Upgrade-MFADatabase -ServerName SQLServer\Instance -DatabaseName MFADatabase</para>
              <para></para>
              <para>Upgrade an existing database for MFA with encryted columns or not, using rights to the specified account</para>
            </example>
        </member>
        <member name="P:MFA.UpgradeMFADatabase.ServerName">
            <summary>
            <para type="description">SQL ServerName, you must include Instance if needed eg : server\instance.</para>
            </summary>
        </member>
        <member name="P:MFA.UpgradeMFADatabase.DatabaseName">
            <summary>
            <para type="description">Name of the SQL Database, if database exists an error is thrown.</para>
            </summary>
        </member>
        <member name="M:MFA.UpgradeMFADatabase.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UpgradeMFADatabase.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.RegisterMFASystemMasterKey">
            <summary>
            <para type="synopsis">Register a new sytem master key.</para>
            <para type="description">Register a new sytem master key for MFA.</para>
            </summary>
            <example>
              <para>Register-MFASystemMasterKey</para>
              <para>Register a new system master key for MFA System Encryption.</para>
            </example>
            <example>
              <para>Register-MFASystemMasterKey -Deploy</para>
              <para>Deploy current system master key for MFA System Encryption.</para>
            </example>
            <example>
              <para>Register-MFASystemMasterKey -Delete</para>
              <para>Delete current system master key for MFA System Encryption.</para>
            </example>
        </member>
        <member name="P:MFA.RegisterMFASystemMasterKey.Deploy">
            <summary>
            <para type="description">Deploy current AES256 key on the farm.</para>
            Deploy switch
            </summary>
        </member>
        <member name="P:MFA.RegisterMFASystemMasterKey.Delete">
            <summary>
            <para type="description">Delete current RSA key for MFA Passwords and reset all passwords and Passphrase to default AES encryption.</para>
            NoRSAKeyReset property
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystemMasterKey.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystemMasterKey.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.RegisterMFASystemAESCngKey">
            <summary>
            <para type="synopsis">Register a new sytem AES256 Cng key.</para>
            <para type="description">Register a new sytem AES256 Cng for MFA.</para>
            </summary>
            <example>
              <para>Register-MFASystemAESCngKey</para>
              <para>Register a new sytem AES256 Cng for MFA System Enryption.</para>
            </example>
            <example>
              <para>Register-MFASystemAESCngKey -Deploy</para>
              <para>Deploy current encryption key for AES Cng on the farm.</para>
            </example>
            <example>
              <para>Register-MFASystemAESCngKey -Delete</para>
              <para>Delete encryption Key for AES Cng from the farm.</para>
            </example>
        </member>
        <member name="P:MFA.RegisterMFASystemAESCngKey.Deploy">
            <summary>
            <para type="description">Deploy current AES256 key on the farm.</para>
            Deploy switch
            </summary>
        </member>
        <member name="P:MFA.RegisterMFASystemAESCngKey.Delete">
            <summary>
            <para type="description">Delete current AES256 key.</para>
            Delete switch
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystemAESCngKey.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RegisterMFASystemAESCngKey.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.InstallMFASelfSignedCertificate">
            <summary>
            <para type="synopsis">Create a Self Signed Certificate (PFX).</para>
            <para type="description">Create a Self Signed Certificate (PFX).</para>
            </summary>
            <example>
              <para>Create-MFASelfSignedCertificate -Subject "myapp decrypt" -Kind Decrypting -Duration 5 -PFXFileName "c:\temp\myapp-decrypt.pfx"</para>
              <para>Create a new certificate for Users.</para>
            </example>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.Subject">
            <summary>
            Subject property
            <para type="description">Subject/Issuer Certificate property extension</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.DnsName">
            <summary>
            DnsName property
            <para type="description">DnsName Certificate property extension (SSL, All)</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.Kind">
            <summary>
            Kind property
            <para type="description">Kind for Certificate (SSL, Client, Signing, Decrypting, All)</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.Duration">
            <summary>
            Duration property
            <para type="description">Duration for the new certificate (Years)</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.PFXFileName">
            <summary>
            PFXFileName property
            <para type="description">PFX output filename with full path</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASelfSignedCertificate.Password">
            <summary>
            Password property
            <para type="description">PFX password protection (can be empty)</para>
            </summary>
        </member>
        <member name="M:MFA.InstallMFASelfSignedCertificate.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.InstallMFASelfSignedCertificate.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.InstallMFACertificate">
            <summary>
            <para type="synopsis">Install RSA Certificate.</para>
            <para type="description">Install a new RSA Certificate for Users.</para>
            </summary>
            <example>
              <para>Install-MFACertificate</para>
              <para>Create a new certificate for Users.</para>
            </example>
            <example>
              <para>Install-MFACertificate -Duration 10</para>
              <para>Create a new certificate for Users with specific duration.</para>
            </example>
        </member>
        <member name="P:MFA.InstallMFACertificate.Duration">
            <summary>
            Duration property
            <para type="description">Duration for the new certificate (Years)</para>
            </summary>
        </member>
        <member name="M:MFA.InstallMFACertificate.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.InstallMFACertificate.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.InstallMFACertificateForADFS">
            <summary>
            <para type="synopsis">Install RSA Certificate.</para>
            <para type="description">Install a new RSA Certificate for MFA.</para>
            </summary>
            <example>
              <para>Install-MFACertificateForADFS</para>
              <para>Create a new certificate for ADFS Encrypt/Sign.</para>
            </example>
            <example>
              <para>Install-MFACertificateForADFS -Duration 10 -RestartFarm</para>
              <para>Create a new certificate for ADFS Encrypt/Sign with specific duration.</para>
            </example>
        </member>
        <member name="P:MFA.InstallMFACertificateForADFS.Subject">
            <summary>
            Subject property
            <para type="description">Subject of the certificate</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFACertificateForADFS.Kind">
            <summary>
            Kind property
            <para type="description">Kind  of the certificate</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFACertificateForADFS.Duration">
            <summary>
            Duration property
            <para type="description">Duration for the new certificate (Years)</para>
            </summary>
        </member>
        <member name="M:MFA.InstallMFACertificateForADFS.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.InstallMFACertificateForADFS.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ImportMFAUsersCSV">
            <summary>
            <para type="synopsis">Imports users from CSV file in MFA System.</para>
            <para type="description">Imports users from CSV file in MFA System, can be used with ADDS and SQL configuration.</para>
            </summary>
            <example>
              <para>Import-MFAUsersCSV -LitteralPath c:\temp\import.csv</para>
              <para>Import-MFAUsersCSV -LitteralPath c:\temp\import.csv -DisableAll -SendMail -NewKey</para>
              <para></para>
              <para>LitteralPath is required, full file name path</para>
              <para></para>
              <para>NewKey generation of a new Key only if an update occurs, when adding a user, a key is always generated</para>
              <para></para>
              <para>DisableAll Status of Added users set to disabled</para>
            </example>
        </member>
        <member name="P:MFA.ImportMFAUsersCSV.LitteralPath">
            <summary>
            <para type="description">Litteral path to the CSV file to be imported.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersCSV.SendEmail">
            <summary>
            <para type="description">allow send email when a new Key is generated for MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersCSV.NewKey">
            <summary>
            <para type="description">Regenerate a new secret key for the updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersCSV.DisableAll">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersCSV.NoLogFile">
            <summary>
            <para type="description">Suppress log file generation</para>
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersCSV.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersCSV.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ImportMFAUsersXML">
            <summary>
            <para type="synopsis">Imports users from XML file in MFA System.</para>
            <para type="description">Imports users from XML file in MFA System, can be used with ADDS and SQL configuration.</para>
            </summary>
            <example>
              <para>Import-MFAUsersXML -LitteralPath c:\temp\import.xml</para>
              <para>Import-MFAUsersXML -LitteralPath c:\temp\import.xml -DisableAll -SendMail -NewKey</para>
              <para></para>
              <para>LitteralPath is required, full file name path</para>
              <para></para>
              <para>NewKey generation of a new Key only if an update occurs, when adding a user, a key is always generated</para>
              <para></para>
              <para>DisableAll Status of Added users set to disabled</para>
            </example>
        </member>
        <member name="P:MFA.ImportMFAUsersXML.LitteralPath">
            <summary>
            <para type="description">Litteral path to the XML file to be imported.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersXML.SendEmail">
            <summary>
            <para type="description">allow send email when a new Key is generated for MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersXML.NewKey">
            <summary>
            <para type="description">Regenerate a new secret key for updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersXML.DisableAll">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersXML.NoLogFile">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersXML.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersXML.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ImportMFAUsersADDS">
            <summary>
            <para type="synopsis">Imports users from ADDS in MFA System.</para>
            <para type="description">Imports users from ADDS in MFA System, can be used with ADDS and SQL configuration.</para>
            </summary>
            <example>
              <para>Import-MFAUsersADDS -LDAPPath "dc=domain,dc=com"</para>
              <para>Import-MFAUsersADDS -LDAPPath "dc=domain,dc=com" -DisableAll -SendMail -NewKey</para>
              <para>Import-MFAUsersADDS -LDAPPath "dc=domain,dc=com" -Method Code -ModifiedSince ([DateTime]::UtcNow.AddHours(-4))</para>
              <para>Import-MFAUsersADDS -LDAPPath "dc=domain,dc=com" -Method Code -ModifiedSince ([DateTime]::UtcNow.AddMinutes(-30))</para>
              <para>Import-MFAUsersADDS -LDAPPath "dc=domain,dc=com" -LDAPFilter "(memberof=CN=my Users,OU=Extranet,DC=domain,DC=com)" </para>
              <para></para>
              <para>NewKey generation of a new Key only if an update occurs, when adding a user, a key is always generated</para>
              <para></para>
              <para>DisableAll Status of Added users set to disabled</para>
            </example>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.LDAPPath">
            <summary>
            <para type="description">ADDS LDAP path to query (dc=domain,dc=com)</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.LDAPFilter">
            <summary>
            <para type="description">ADDS LDAP path to query (dc=domain,dc=com)</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.DomainName">
            <summary>
            <para type="description">ADDS DNS domain or forest</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.UserName">
            <summary>
            <para type="description">optionnal UserName used to connect</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.Password">
            <summary>
            <para type="description">optionnal Password used to connect</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.CreatedSince">
            <summary>
            <para type="description">Imports only users created since CreatedSince property</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.ModifiedSince">
            <summary>
            <para type="description">Imports only users modified since ModifiedSince property</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.MailAttributes">
            <summary>
            <para type="description">Mail Attribute for Email or $null</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.PhoneAttribute">
            <summary>
            <para type="description">Phone Attribute for Phone or $null</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.Method">
            <summary>
            <para type="description">Default value for method</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.SendEmail">
            <summary>
            <para type="description">allow send email when a new Key is generated for MFA.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.NewKey">
            <summary>
            <para type="description">Regenerate a new secret key for updated users.</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.DisableAll">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.NoLogFile">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="P:MFA.ImportMFAUsersADDS.NoRecurse">
            <summary>
            <para type="description">Do not recurse, only users in LDAPPath !</para>
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersADDS.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ImportMFAUsersADDS.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.CleanMFAUsersADDS">
            <summary>
            <para type="synopsis">Remove disabled ADDS users from MFA System.</para>
            <para type="description">Remove disabled ADDS users from MFA System.</para>
            </summary>
            <example>
              <para>CleanUp-MFAUsersADDS</para>   
            </example>
        </member>
        <member name="P:MFA.CleanMFAUsersADDS.DomainName">
            <summary>
            <para type="description">ADDS DNS domain or forest</para>
            </summary>
        </member>
        <member name="P:MFA.CleanMFAUsersADDS.UserName">
            <summary>
            <para type="description">optionnal UserName used to connect</para>
            </summary>
        </member>
        <member name="P:MFA.CleanMFAUsersADDS.Password">
            <summary>
            <para type="description">optionnal Password used to connect</para>
            </summary>
        </member>
        <member name="P:MFA.CleanMFAUsersADDS.NoLogFile">
            <summary>
            <para type="description">Imported users are not enabled by default. an extra administrative task required !</para>
            </summary>
        </member>
        <member name="M:MFA.CleanMFAUsersADDS.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.CleanMFAUsersADDS.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.SQLEncryptedDatabaseDynamicParameters">
            <summary>
            <para type="description">Set TOTP Provider configuration data.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLEncryptedDatabaseDynamicParameters.RestartFarm">
            <summary>
            <para type="description">Restart Farm Services</para>
            RestartFarm property
            </summary>
        </member>
        <member name="P:MFA.SQLEncryptedDatabaseDynamicParameters.EncryptKeyName">
            <summary>
            <para type="description">EncryptKeyName, SQLServer crypting key, required if encrypted switch is used.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLEncryptedDatabaseDynamicParameters.CertificateDuration">
            <summary>
            <para type="description">CertificateDuration, SQLServer crypting certificate duration, in years, default = 5. Required if new certificate is requested.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLEncryptedDatabaseDynamicParameters.ReuseCertificate">
            <summary>
            <para type="description">ReuseCertificate, Reuse existing SQLServer crypting certificate,you must also specify a certificate ThumPrint.</para>
            </summary>
        </member>
        <member name="P:MFA.SQLEncryptedDatabaseDynamicParameters.ThumbPrint">
            <summary>
            <para type="description">ThumbPrint, existing SQLServer crypting certificate thumbprint, you must specify switch parameter ReuseCertificate.</para>
            </summary>
        </member>
        <member name="T:MFA.SetMFAFirewallRules">
            <summary>
            <para type="synopsis">Set basic Firewall rules for MFA inter servers communication.</para>
            <para type="description">Set basic Firewall rules for MFA inter servers communication.</para>
            <para type="description">Must be run on each ADFS Server</para>
            </summary>
            <example>
              <para>Set-MFAFirewallRules</para>
              <para>Set-MFAFirewallRules -ComputersAllowed '172.16.100.1,172.16.100.2,172.16.100.3'</para>
              <para>Set-MFAFirewallRules -ComputersAllowed '172.16.100.1-172.16.100.254'</para>
            </example>
        </member>
        <member name="P:MFA.SetMFAFirewallRules.ComputersAllowed">
            <summary>
            <para type="description">Computers Allowed va firewall inbound rules and outbound rules.</para>
            </summary>
        </member>
        <member name="M:MFA.SetMFAFirewallRules.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.SetMFAFirewallRules.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UpdatetMFACertificatesAccessControlList">
            <summary>
            <para type="synopsis">Update Acces Control List for MFA Certificates stored in LocalMachine Store. Usefull after you deploy an cetificate in ADFS Farm</para>
            <para type="description">Update Acces Control List for MFA Certificates stored in LocalMachine Store. Usefull after you deploy an cetificate in ADFS Farm</para>
            <para type="description">Must be run on each ADFS Server</para>
            </summary>
            <example>
              <para>Update-MFACertificatesAccessControlList</para>
            </example>
        </member>
        <member name="P:MFA.UpdatetMFACertificatesAccessControlList.CertsKind">
            <summary>
            <para type="description">Certificates Kind to check for updating private keys ACL (0 = All, 1 = MFA, 2 = ADFS, 4 = SSL.</para>
            </summary>
        </member>
        <member name="M:MFA.UpdatetMFACertificatesAccessControlList.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UpdatetMFACertificatesAccessControlList.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.ClearMFAOrphanedRSAKeyPairs">
            <summary>
            <para type="synopsis">Clear keys pairs found in C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys that are not linked with a valid certificate</para>
            <para type="description">Clear keys pairs found in C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys that are not linked with a valid certificate</para>
            <para type="description">Must be run on each ADFS Server</para>
            </summary>
            <example>
              <para>Clear-MFAOrphanedRSAKeyPairs</para>
            </example>
            <example>
              <para>Clear-MFAOrphanedRSAKeyPairs -AutoCleanUp Enable -CleanUpDelay 20</para>
            </example>
        </member>
        <member name="P:MFA.ClearMFAOrphanedRSAKeyPairs.AutoCleanUp">
            <summary>
            <para type="description">AutoCleanUp for automating clean-up.</para>
            </summary>
        </member>
        <member name="P:MFA.ClearMFAOrphanedRSAKeyPairs.CleanUpDelay">
            <summary>
            <para type="description">CleanUpDelay period in minutes.</para>
            </summary>
        </member>
        <member name="M:MFA.ClearMFAOrphanedRSAKeyPairs.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ClearMFAOrphanedRSAKeyPairs.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.RefreshMFAConfigurationCache">
            <summary>
                <para type="synopsis">Update Configuration cache from current server</para>
                <para type="description">Update Configuration cache from current server</para>
            </summary>
            <example>
                <para>Refresh-MFAConfigurationCache</para>
            </example>    
        </member>
        <member name="M:MFA.RefreshMFAConfigurationCache.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.RefreshMFAConfigurationCache.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UpdateMFAConfigurationCache">
            <summary>
                <para type="synopsis">Request New Configuration cache from current server</para>
                <para type="description">Request New Configuration cache from current server</para>
            </summary>
            <example>
                <para>Update-MFAConfigurationCache</para>
            </example>
        </member>
        <member name="M:MFA.UpdateMFAConfigurationCache.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UpdateMFAConfigurationCache.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.DeleteMFAConfigurationCache">
            <summary>
                <para type="synopsis">Delete Configuration cache from servers </para>
                <para type="description">Delete Configuration cache from server</para>
            </summary>
            <example>
                <para>Clear-MFAConfigurationCache</para>
            </example>
        </member>
        <member name="M:MFA.DeleteMFAConfigurationCache.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.DeleteMFAConfigurationCache.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.UpdateMFACredentials">
            <summary>
                <para type="synopsis">Update MFA Crrdentials</para>
                <para type="description">Change MFA Passwords and PassPhrase</para>
            </summary>
            <example>
                <para>Update-MFACredentials</para>
                <para>Update-MFACredentials -Kind SuperUser -Value mypassord</para>
            </example>    
        </member>
        <member name="P:MFA.UpdateMFACredentials.Kind">
            <summary>
            <para type="description">Credential Kind.</para>
            </summary>
        </member>
        <member name="P:MFA.UpdateMFACredentials.Value">
            <summary>
            <para type="description">Credential/Password value.</para>
            </summary>
        </member>
        <member name="P:MFA.UpdateMFACredentials.ClearCredential">
            <summary>
            <para type="description">Clear Credential value or Reset XORKey to default.</para>
            </summary>
        </member>
        <member name="M:MFA.UpdateMFACredentials.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.UpdateMFACredentials.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.CredValueDynamicParameters">
            <summary>
            CredValueDynamicParameters class implementation
            </summary>
        </member>
        <member name="T:MFA.ExportMFAMailTemplates">
            <summary>
                <para type="synopsis">Export and Register Mail Templates as html files for a specific LCID</para>
                <para type="description">Export and Register Mail Templates as html files for a specific LCID</para>
            </summary>
            <example>
                <para>Export-MFAMailTemplates -LCID 1036</para>
            </example>
        </member>
        <member name="P:MFA.ExportMFAMailTemplates.LCID">
            <summary>
            <para type="description">LCID.</para>
            </summary>
        </member>
        <member name="M:MFA.ExportMFAMailTemplates.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.ExportMFAMailTemplates.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.InstallMFASamples">
            <summary>
                <para type="synopsis">Install and configure MFA Samples</para>
                <para type="description">Install and configure MFA Samples</para>
            </summary>
            <example>
                <para>Install-MFASamples -Kind Quiz</para>
            </example>
        </member>
        <member name="P:MFA.InstallMFASamples.Kind">
            <summary>
            <para type="description">Kind.</para>
            </summary>
        </member>
        <member name="P:MFA.InstallMFASamples.Reset">
            <summary>
            <para type="description">Kind.</para>
            </summary>
        </member>
        <member name="M:MFA.InstallMFASamples.BeginProcessing">
            <summary>
            BeginProcessing method implementation
            </summary>
        </member>
        <member name="M:MFA.InstallMFASamples.ProcessRecord">
            <summary>
            ProcessRecord method override
            </summary>
        </member>
        <member name="T:MFA.PrimaryServerRequiredAttribute">
            <summary>
            <para type="synopsis">Attribute for Primary Server required for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.PrimaryServerRequiredAttribute.#ctor">
            <summary>
            PrimaryServerRequiredAttribute constructor
            </summary>
        </member>
        <member name="T:MFA.ADFS2019RequiredAttribute">
            <summary>
            <para type="synopsis">Attribute for checking for ADFS 2019 version for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.ADFS2019RequiredAttribute.#ctor">
            <summary>
            ADFS2019RequiredAttribute constructor
            </summary>
        </member>
        <member name="T:MFA.AdministratorsRightsRequiredAttribute">
            <summary>
            <para type="synopsis">Attribute for checking for ADFS Administration rights for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.AdministratorsRightsRequiredAttribute.#ctor">
            <summary>
            AdministratorsRightsRequiredAttribute constructor
            </summary>
        </member>
        <member name="T:MFA.ConfigurationRightsRequiredAttribute">
            <summary>
            <para type="synopsis">Attribute for checking for ADFS Administration rights for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.ConfigurationRightsRequiredAttribute.#ctor">
            <summary>
            ConfigurationRightsRequiredAttribute constructor
            </summary>
        </member>
        <member name="T:MFA.NotRemotableAttribute">
            <summary>
            <para type="synopsis">Attribute for checking for ADFS Remotable Administration rights for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.NotRemotableAttribute.#ctor">
            <summary>
            NotRemotableAttribute constructor
            </summary>
        </member>
        <member name="T:MFA.AdministrationPinAttribute">
            <summary>
            <para type="synopsis">Attribute for checking for ADFS Administration Pin for Cmdlets in MFA System.</para>
            </summary>
        </member>
        <member name="M:MFA.AdministrationPinAttribute.#ctor">
            <summary>
            AdministrationPinAttribute constructor
            </summary>
        </member>
        <member name="T:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorAddingUser">
            <summary>
              Recherche une chaîne localisée semblable à Error adding user {0} {1}.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorComputerNotFound">
            <summary>
              Recherche une chaîne localisée semblable à Computer {0} not found !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorDeletingUser">
            <summary>
              Recherche une chaîne localisée semblable à Error deleting user {0} {1}.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorEmailNotProvided">
            <summary>
              Recherche une chaîne localisée semblable à Email address not provided for user {0} !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorInvalidServerName">
            <summary>
              Recherche une chaîne localisée semblable à Invalid server name : you must specify server FQDN ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorPhoneNotProvided">
            <summary>
              Recherche une chaîne localisée semblable à Phone number not provided for user {0} !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorUpdatingUser">
            <summary>
              Recherche une chaîne localisée semblable à Error updating user {0} {1}.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorUserExists">
            <summary>
              Recherche une chaîne localisée semblable à User {0} Exists !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.errors_strings.ErrorUserNotFound">
            <summary>
              Recherche une chaîne localisée semblable à User {0} not found !.
            </summary>
        </member>
        <member name="T:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoAllKeyWillbeReset">
            <summary>
              Recherche une chaîne localisée semblable à All the users&apos;s current keys will be invalidated ! Continue ?.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoComputerNotRegistered">
            <summary>
              Recherche une chaîne localisée semblable à Computer {0} NOT Added/Updated to MFA configuration.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoComputerNotUnRegistered">
            <summary>
              Recherche une chaîne localisée semblable à Computer {0} NOT Removed from MFA configuration.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoComputerRegistered">
            <summary>
              Recherche une chaîne localisée semblable à Computer {0} Added/Updated to MFA configuration.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoComputerUnRegistered">
            <summary>
              Recherche une chaîne localisée semblable à Computer {0} Removed from MFA configuration.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfoRSAKeyWillbeReset">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA key will be renewed ! Continue ?.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosADFSCertificateChanged">
            <summary>
              Recherche une chaîne localisée semblable à ADFS Certificate correctly created !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosADFSServicesRestarted">
            <summary>
              Recherche une chaîne localisée semblable à ADFS Service correctly restarted on server {0} !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosAllServicesRestarted">
            <summary>
              Recherche une chaîne localisée semblable à All Farm Services Restarted !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosCertsACLUpdated">
            <summary>
              Recherche une chaîne localisée semblable à Access Control List updated for all MFA certificates !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosConfigNotUpdated">
            <summary>
              Recherche une chaîne localisée semblable à MFA Configuration NOT updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosConfigUpdated">
            <summary>
              Recherche une chaîne localisée semblable à MFA Configuration updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosCredentialsChanged">
            <summary>
              Recherche une chaîne localisée semblable à Credentials correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosDatabaseCreated">
            <summary>
              Recherche une chaîne localisée semblable à Database {0} created !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosDatabaseUpgraded">
            <summary>
              Recherche une chaîne localisée semblable à Database {0} upgraded !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosMailTemplateExported">
            <summary>
              Recherche une chaîne localisée semblable à Mail templates correctly exported !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosNo">
            <summary>
              Recherche une chaîne localisée semblable à &amp;No.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosNotificationSend">
            <summary>
              Recherche une chaîne localisée semblable à Notification dispatched !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosOrphanedDeleted">
            <summary>
              Recherche une chaîne localisée semblable à Number of deleted orphaned private keys.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRecordsCount">
            <summary>
              Recherche une chaîne localisée semblable à Records count : {0}.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSACertificateChanged">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Certificate correctly installed ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSACertificateError">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Certificate not correctly installed !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemAESCngChanged">
            <summary>
              Recherche une chaîne localisée semblable à MFA AES CNG Encryption Key correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemAESCngDeleted">
            <summary>
              Recherche une chaîne localisée semblable à MFA AES CNG Encryption Key correctly deleted ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemAESCngDeployed">
            <summary>
              Recherche une chaîne localisée semblable à MFA AES CNG Encryption Key correctly deployed !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemAESCngError">
            <summary>
              Recherche une chaîne localisée semblable à MFA AES CNG Encryption key not correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemKeyChanged">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Encryption Key correctly updated ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemKeyDeleted">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Encryption Key correctly deleted ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemKeyDeployed">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Encryption Key correctly deployed over the farm !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosRSASystemKeyError">
            <summary>
              Recherche une chaîne localisée semblable à MFA RSA Encryption key not correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSampleInstalled">
            <summary>
              Recherche une chaîne localisée semblable à MFA example installed !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSampleUnInstalled">
            <summary>
              Recherche une chaîne localisée semblable à MFA example UnInstalled !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSelfSignedGenerated">
            <summary>
              Recherche une chaîne localisée semblable à Self Signed certificate created.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSelfSignedNotGenerated">
            <summary>
              Recherche une chaîne localisée semblable à Self Signed certificate not generated.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosServerServicesRestarted">
            <summary>
              Recherche une chaîne localisée semblable à You must restart &quot;MFA Notification Hub&quot; service and restart all open consoles and powershell sessions  !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSQLCertificateChanged">
            <summary>
              Recherche une chaîne localisée semblable à SQL certificate {0} correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemAlreadyInitialized">
            <summary>
              Recherche une chaîne localisée semblable à MFA is already initialized ! you must run &quot;UnRegister-MFASystem&quot; PowerShell Cmdlet if you want to reinitialize ALL the MFA configuration.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemExported">
            <summary>
              Recherche une chaîne localisée semblable à MFA Configuration correctly exported to file {0} !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemImported">
            <summary>
              Recherche une chaîne localisée semblable à MFA Configuration correctly imported from file {0} !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemInInvalidState">
            <summary>
              Recherche une chaîne localisée semblable à MFA Configuration Import with errors !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemNotRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA System Not registered ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA System correctly registered ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosSystemUnRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA System correctly unconfigured !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatDataNotUpdated">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System Data was not correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatDataUpdated">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System Data correctly updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatSystemNotRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System was not correctly registered ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatSystemNotUnRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System was not correctly unconfigured !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatSystemRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System correctly registered ! .
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosThreatSystemUnRegistered">
            <summary>
              Recherche une chaîne localisée semblable à MFA Threat System correctly unconfigured !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosUserAdded">
            <summary>
              Recherche une chaîne localisée semblable à User {0} added !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosUserDeleted">
            <summary>
              Recherche une chaîne localisée semblable à User {0} deleted !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosUserHasNewKey">
            <summary>
              Recherche une chaîne localisée semblable à User {0} has a new Encryption key !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosUserUpdated">
            <summary>
              Recherche une chaîne localisée semblable à User {0} updated !.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosWarningAboutTheme">
            <summary>
              Recherche une chaîne localisée semblable à CAUTION ! your theme must be fully compatible (js, css, etc...) with the UI you choose : {0}.
            </summary>
        </member>
        <member name="P:Neos.IdentityServer.MultiFactor.Cmdlets.Ressources.infos_strings.InfosYes">
            <summary>
              Recherche une chaîne localisée semblable à &amp;Yes.
            </summary>
        </member>
    </members>
</doc>

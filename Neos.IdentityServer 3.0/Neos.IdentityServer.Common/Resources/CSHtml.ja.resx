<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADMINInscriptionEmail" xml:space="preserve">
    <value>登録情報を記載したメールを送信しました。</value>
  </data>
  <data name="ADMINKeyEmail" xml:space="preserve">
    <value>秘密鍵を含むメールをお送りしました。(機密)</value>
  </data>
  <data name="GLOBALListChoiceDefaultLabel" xml:space="preserve">
    <value>既定のオプションを使用する</value>
  </data>
  <data name="GLOBALPINLabel" xml:space="preserve">
    <value>PINコードを入力してください</value>
  </data>
  <data name="GLOBALPINMessage" xml:space="preserve">
    <value>PINコードを入力してください</value>
  </data>
  <data name="GLOBALUIPINLabel" xml:space="preserve">
    <value>PINコードを登録する</value>
  </data>
  <data name="GLOBALWarnOverNetwork" xml:space="preserve">
    <value>(データはインターネット経由で転送されます)</value>
  </data>
  <data name="GLOBALWarnThirdParty" xml:space="preserve">
    <value>(認証は第三者によって行われます)</value>
  </data>
  <data name="MAILUIEnrollValidatedLabel" xml:space="preserve">
    <value>アカウントの確認済み&lt;br&gt;&lt;br&gt;これで、メールアドレスを使用して認証を行うことができます</value>
  </data>
  <data name="MAILUIMessage" xml:space="preserve">
    <value>確認コードを含むメールを送信しました。</value>
  </data>
  <data name="MAILUIOTPLabel" xml:space="preserve">
    <value>コードの入力</value>
  </data>
  <data name="MAILUIWIZLabel" xml:space="preserve">
    <value>メールアドレスを登録する</value>
  </data>
  <data name="OTPUICFGLabel" xml:space="preserve">
    <value>単一使用アクセスコード</value>
  </data>
  <data name="OTPUIChoiceLabel" xml:space="preserve">
    <value>認証アプリケーションを使用する</value>
  </data>
  <data name="OTPUIConfigLabel" xml:space="preserve">
    <value>認証アプリケーションを使用する</value>
  </data>
  <data name="OTPUIEnrollTaskLabel" xml:space="preserve">
    <value>認証アプリケーションの登録</value>
  </data>
  <data name="OTPUIEnrollValidatedLabel" xml:space="preserve">
    <value>アカウントの確認済み&lt;br&gt;&lt;br&gt;これでアプリを使用して認証を行うことができます</value>
  </data>
  <data name="OTPUIListChoiceLabel" xml:space="preserve">
    <value>認証アプリケーションを使用する</value>
  </data>
  <data name="OTPUIListOptionLabel" xml:space="preserve">
    <value>認証アプリケーション</value>
  </data>
  <data name="OTPUIMessage" xml:space="preserve">
    <value>モバイルデバイスの認証アプリに表示される確認コードを入力します。</value>
  </data>
  <data name="OTPUIOTPLabel" xml:space="preserve">
    <value>コードの入力</value>
  </data>
  <data name="OTPUIWIZLabel" xml:space="preserve">
    <value>認証アプリの登録</value>
  </data>
  <data name="OTPWIZEnroll" xml:space="preserve">
    <value>認証アプリケーションの登録</value>
  </data>
  <data name="SMSUICFGLabel" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="SMSUIChoiceLabel" xml:space="preserve">
    <value>モバイルでメッセージを送信する</value>
  </data>
  <data name="SMSUIChoiceLabel2" xml:space="preserve">
    <value>モバイルで受信したコードを返す</value>
  </data>
  <data name="SMSUIConfigLabel" xml:space="preserve">
    <value>携帯電話のテキストメッセージ</value>
  </data>
  <data name="SMSUIConfigLabel2" xml:space="preserve">
    <value>携帯電話の{0}に表示されるテキスト メッセージ</value>
  </data>
  <data name="SMSUIEnrollTaskLabel" xml:space="preserve">
    <value>携帯電話番号を入力する</value>
  </data>
  <data name="SMSUIEnrollValidatedLabel" xml:space="preserve">
    <value>アカウントの確認済み&lt;br&gt;&lt;br&gt;これで、携帯電話を使用して認証することができます</value>
  </data>
  <data name="SMSUIListChoiceLabel" xml:space="preserve">
    <value>携帯電話でメッセージを受信する</value>
  </data>
  <data name="SMSUIListOptionLabel" xml:space="preserve">
    <value>携帯電話認証</value>
  </data>
  <data name="SMSUIMessage" xml:space="preserve">
    <value>確認コードを含む SMS を送信しました。</value>
  </data>
  <data name="SMSUIOTPLabel" xml:space="preserve">
    <value>電話で受信したアクセス コード</value>
  </data>
  <data name="SMSUIWIZLabel" xml:space="preserve">
    <value>モバイルを登録する</value>
  </data>
  <data name="SMSWIZEnroll" xml:space="preserve">
    <value>電話を登録する</value>
  </data>
  <data name="PROVIDEROTPDESCRIPTION" xml:space="preserve">
    <value>TOTP 多要素プロバイダー</value>
  </data>
  <data name="PROVIDERSMSDESCRIPTION" xml:space="preserve">
    <value>SMS 多要素プロバイダーのサンプル</value>
  </data>
  <data name="PROVIDEREMAILDESCRIPTION" xml:space="preserve">
    <value>電子メール多要素プロバイダー</value>
  </data>
  <data name="OTPUIWIZComment" xml:space="preserve">
    <value>アカウントを登録するためのMicrosoft Authenticator、Google AuthenticatorなどのTOTPアプリケーションでQRコードをスキャン</value>
  </data>
  <data name="MAILUIWIZComment" xml:space="preserve">
    <value>識別情報を確認するには、電子メール アドレスを入力する必要があります。このメールは、企業の確認(個人の電子メールアドレス)を必要とせずに到達可能である必要があります</value>
  </data>
  <data name="SMSUIWIZComment" xml:space="preserve">
    <value>本人確認のため、電話番号を入力する必要があります。この電話は到達可能でなければなりません。</value>
  </data>
  <data name="PROVIDERPLUGDESCRIPTION" xml:space="preserve">
    <value>{0}多要素プロバイダー(プラグ)</value>
  </data>
  <data name="MAILUICFGLabel" xml:space="preserve">
    <value>メールアドレス</value>
  </data>
  <data name="MAILUIChoiceLabel" xml:space="preserve">
    <value>メールを受信する</value>
  </data>
  <data name="MAILUIConfigLabel" xml:space="preserve">
    <value>メールを送信する</value>
  </data>
  <data name="MAILUIConfigLabel2" xml:space="preserve">
    <value>{0}アドレスにメールを送信する</value>
  </data>
  <data name="MAILUIEnrollTaskLabel" xml:space="preserve">
    <value>電子メール アドレスを指定する</value>
  </data>
  <data name="MAILUIListChoiceLabel" xml:space="preserve">
    <value>メールを受け取る</value>
  </data>
  <data name="MAILUIListOptionLabel" xml:space="preserve">
    <value>メールアドレス</value>
  </data>
  <data name="MAILWIZEnroll" xml:space="preserve">
    <value>メールアドレスを保存する</value>
  </data>
</root>